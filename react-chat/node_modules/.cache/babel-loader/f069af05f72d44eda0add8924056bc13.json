{"ast":null,"code":"\"use strict\";\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Messages = void 0;\n\nvar events_1 = require(\"events\");\n\nvar logger_1 = require(\"../logger\");\n\nvar message_1 = require(\"../message\");\n\nvar log = logger_1.Logger.scope('Messages');\n/**\n * Represents the collection of messages in a conversation\n */\n\nvar Messages = function (_events_1$EventEmitte) {\n  (0, _inherits3.default)(Messages, _events_1$EventEmitte);\n\n  function Messages(conversation, services) {\n    (0, _classCallCheck3.default)(this, Messages);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Messages.__proto__ || (0, _getPrototypeOf2.default)(Messages)).call(this));\n\n    _this.conversation = conversation;\n    _this.services = services;\n    _this.messagesByIndex = new _map2.default();\n    _this.messagesListPromise = null;\n    return _this;\n  }\n  /**\n   * Subscribe to the Messages Event Stream\n   * @param {String} name - The name of Sync object for the Messages resource.\n   * @returns {Promise}\n   */\n\n\n  (0, _createClass3.default)(Messages, [{\n    key: \"subscribe\",\n    value: function subscribe(name) {\n      var _this2 = this;\n\n      return this.messagesListPromise = this.messagesListPromise || this.services.syncClient.list({\n        id: name,\n        mode: 'open_existing'\n      }).then(function (list) {\n        list.on('itemAdded', function (args) {\n          log.debug(_this2.conversation.sid + ' itemAdded: ' + args.item.index);\n          var message = new message_1.Message(_this2.conversation, _this2.services, args.item.index, args.item.value);\n\n          if (_this2.messagesByIndex.has(message.index)) {\n            log.debug('Message arrived, but already known and ignored', _this2.conversation.sid, message.index);\n            return;\n          }\n\n          _this2.messagesByIndex.set(message.index, message);\n\n          message.on('updated', function (args) {\n            return _this2.emit('messageUpdated', args);\n          });\n\n          _this2.emit('messageAdded', message);\n        });\n        list.on('itemRemoved', function (args) {\n          log.debug(_this2.conversation.sid + ' itemRemoved: ' + args.index);\n          var index = args.index;\n\n          if (_this2.messagesByIndex.has(index)) {\n            var message = _this2.messagesByIndex.get(index);\n\n            _this2.messagesByIndex.delete(message.index);\n\n            message.removeAllListeners('updated');\n\n            _this2.emit('messageRemoved', message);\n          }\n        });\n        list.on('itemUpdated', function (args) {\n          log.debug(_this2.conversation.sid + ' itemUpdated: ' + args.item.index);\n\n          var message = _this2.messagesByIndex.get(args.item.index);\n\n          if (message) {\n            message._update(args.item.value);\n          }\n        });\n        return list;\n      }).catch(function (err) {\n        _this2.messagesListPromise = null;\n\n        if (_this2.services.syncClient.connectionState != 'disconnected') {\n          log.error('Failed to get messages object for conversation', _this2.conversation.sid, err);\n        }\n\n        log.debug('ERROR: Failed to get messages object for conversation', _this2.conversation.sid, err);\n        throw err;\n      });\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n        var entity;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.messagesListPromise) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.messagesListPromise;\n\n              case 3:\n                entity = _context.sent;\n                entity.close();\n                this.messagesListPromise = null;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function unsubscribe() {\n        return _ref.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Send Message to the conversation\n     * @param {String} message - Message to post\n     * @param {any} attributes Message attributes\n     * @returns Returns promise which can fail\n     */\n\n  }, {\n    key: \"send\",\n    value: function () {\n      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(message) {\n        var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return _regenerator2.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                log.debug('Sending text message', message, attributes);\n                return _context2.abrupt(\"return\", this.services.session.addCommand('sendMessage', {\n                  channelSid: this.conversation.sid,\n                  text: message,\n                  attributes: (0, _stringify2.default)(attributes)\n                }));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function send(_x2) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return send;\n    }()\n    /**\n     * Send Media Message to the conversation\n     * @param {FormData | Conversation#SendMediaOptions} mediaContent - Media content to post\n     * @param {any} attributes Message attributes\n     * @returns Returns promise which can fail\n     */\n\n  }, {\n    key: \"sendMedia\",\n    value: function () {\n      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(mediaContent) {\n        var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var media, mediaOptions;\n        return _regenerator2.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                log.debug('Sending media message', mediaContent, attributes);\n                media = void 0;\n\n                if (!(typeof FormData !== 'undefined' && mediaContent instanceof FormData)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                log.debug('Sending media message as FormData', mediaContent, attributes);\n                _context3.next = 6;\n                return this.services.mcsClient.postFormData(mediaContent);\n\n              case 6:\n                media = _context3.sent;\n                _context3.next = 16;\n                break;\n\n              case 9:\n                log.debug('Sending media message as SendMediaOptions', mediaContent, attributes);\n                mediaOptions = mediaContent;\n\n                if (!(!mediaOptions.contentType || !mediaOptions.media)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                throw new Error('Media content <Conversation#SendMediaOptions> must contain non-empty contentType and media');\n\n              case 13:\n                _context3.next = 15;\n                return this.services.mcsClient.post(mediaOptions.contentType, mediaOptions.media);\n\n              case 15:\n                media = _context3.sent;\n\n              case 16:\n                return _context3.abrupt(\"return\", this.services.session.addCommand('sendMediaMessage', {\n                  channelSid: this.conversation.sid,\n                  mediaSid: media.sid,\n                  attributes: (0, _stringify2.default)(attributes)\n                }));\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function sendMedia(_x4) {\n        return _ref3.apply(this, arguments);\n      }\n\n      return sendMedia;\n    }()\n    /**\n     * Returns messages from conversation using paginator interface\n     * @param {Number} [pageSize] Number of messages to return in single chunk. By default it's 30.\n     * @param {String} [anchor] Most early message id which is already known, or 'end' by default\n     * @param {String} [direction] Pagination order 'backwards' or 'forward', or 'forward' by default\n     * @returns {Promise<Paginator<Message>>} last page of messages by default\n     */\n\n  }, {\n    key: \"getMessages\",\n    value: function getMessages(pageSize, anchor, direction) {\n      anchor = typeof anchor !== 'undefined' ? anchor : 'end';\n      direction = direction || 'backwards';\n      return this._getMessages(pageSize, anchor, direction);\n    }\n  }, {\n    key: \"wrapPaginator\",\n    value: function wrapPaginator(order, page, op) {\n      var _this3 = this; // We should swap next and prev page here, because of misfit of Sync and Chat paging conceptions\n\n\n      var shouldReverse = order === 'desc';\n\n      var np = function np() {\n        return page.nextPage().then(function (x) {\n          return _this3.wrapPaginator(order, x, op);\n        });\n      };\n\n      var pp = function pp() {\n        return page.prevPage().then(function (x) {\n          return _this3.wrapPaginator(order, x, op);\n        });\n      };\n\n      return op(page.items).then(function (items) {\n        return {\n          items: items.sort(function (x, y) {\n            return x.index - y.index;\n          }),\n          hasPrevPage: shouldReverse ? page.hasNextPage : page.hasPrevPage,\n          hasNextPage: shouldReverse ? page.hasPrevPage : page.hasNextPage,\n          prevPage: shouldReverse ? np : pp,\n          nextPage: shouldReverse ? pp : np\n        };\n      });\n    }\n  }, {\n    key: \"_upsertMessage\",\n    value: function _upsertMessage(index, value) {\n      var _this4 = this;\n\n      var cachedMessage = this.messagesByIndex.get(index);\n\n      if (cachedMessage) {\n        return cachedMessage;\n      }\n\n      var message = new message_1.Message(this.conversation, this.services, index, value);\n      this.messagesByIndex.set(message.index, message);\n      message.on('updated', function (args) {\n        return _this4.emit('messageUpdated', args);\n      });\n      return message;\n    }\n    /**\n     * Returns last messages from conversation\n     * @param {Number} [pageSize] Number of messages to return in single chunk. By default it's 30.\n     * @param {String} [anchor] Most early message id which is already known, or 'end' by default\n     * @param {String} [direction] Pagination order 'backwards' or 'forward', or 'forward' by default\n     * @returns {Promise<SyncPaginator<Message>>} last page of messages by default\n     * @private\n     */\n\n  }, {\n    key: \"_getMessages\",\n    value: function _getMessages(pageSize, anchor, direction) {\n      var _this5 = this;\n\n      anchor = typeof anchor !== 'undefined' ? anchor : 'end';\n      pageSize = pageSize || 30;\n      var order = direction === 'backwards' ? 'desc' : 'asc';\n      return this.messagesListPromise.then(function (messagesList) {\n        return messagesList.getItems({\n          from: anchor !== 'end' ? anchor : void 0,\n          pageSize: pageSize,\n          order: order\n        });\n      }).then(function (page) {\n        return _this5.wrapPaginator(order, page, function (items) {\n          return _promise2.default.all(items.map(function (item) {\n            return _this5._upsertMessage(item.index, item.value);\n          }));\n        });\n      });\n    }\n  }]);\n  return Messages;\n}(events_1.EventEmitter);\n\nexports.Messages = Messages;","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/@twilio/conversations/browser/data/messages.js"],"names":["_promise","require","_promise2","_interopRequireDefault","_stringify","_stringify2","_regenerator","_regenerator2","_asyncToGenerator2","_asyncToGenerator3","_map","_map2","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","obj","__esModule","default","Object","defineProperty","exports","value","Messages","events_1","logger_1","message_1","log","Logger","scope","_events_1$EventEmitte","conversation","services","_this","__proto__","call","messagesByIndex","messagesListPromise","key","subscribe","name","_this2","syncClient","list","id","mode","then","on","args","debug","sid","item","index","message","Message","has","set","emit","get","delete","removeAllListeners","_update","catch","err","connectionState","error","_ref","mark","_callee","entity","wrap","_callee$","_context","prev","next","sent","close","stop","unsubscribe","apply","arguments","_ref2","_callee2","attributes","length","undefined","_callee2$","_context2","abrupt","session","addCommand","channelSid","text","send","_x2","_ref3","_callee3","mediaContent","media","mediaOptions","_callee3$","_context3","FormData","mcsClient","postFormData","contentType","Error","post","mediaSid","sendMedia","_x4","getMessages","pageSize","anchor","direction","_getMessages","wrapPaginator","order","page","op","_this3","shouldReverse","np","nextPage","x","pp","prevPage","items","sort","y","hasPrevPage","hasNextPage","_upsertMessage","_this4","cachedMessage","_this5","messagesList","getItems","from","all","map","EventEmitter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Messages = void 0;\nvar events_1 = require(\"events\");\nvar logger_1 = require(\"../logger\");\nvar message_1 = require(\"../message\");\nvar log = logger_1.Logger.scope('Messages');\n/**\n * Represents the collection of messages in a conversation\n */\n\nvar Messages = function (_events_1$EventEmitte) {\n    (0, _inherits3.default)(Messages, _events_1$EventEmitte);\n\n    function Messages(conversation, services) {\n        (0, _classCallCheck3.default)(this, Messages);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Messages.__proto__ || (0, _getPrototypeOf2.default)(Messages)).call(this));\n\n        _this.conversation = conversation;\n        _this.services = services;\n        _this.messagesByIndex = new _map2.default();\n        _this.messagesListPromise = null;\n        return _this;\n    }\n    /**\n     * Subscribe to the Messages Event Stream\n     * @param {String} name - The name of Sync object for the Messages resource.\n     * @returns {Promise}\n     */\n\n\n    (0, _createClass3.default)(Messages, [{\n        key: \"subscribe\",\n        value: function subscribe(name) {\n            var _this2 = this;\n\n            return this.messagesListPromise = this.messagesListPromise || this.services.syncClient.list({ id: name, mode: 'open_existing' }).then(function (list) {\n                list.on('itemAdded', function (args) {\n                    log.debug(_this2.conversation.sid + ' itemAdded: ' + args.item.index);\n                    var message = new message_1.Message(_this2.conversation, _this2.services, args.item.index, args.item.value);\n                    if (_this2.messagesByIndex.has(message.index)) {\n                        log.debug('Message arrived, but already known and ignored', _this2.conversation.sid, message.index);\n                        return;\n                    }\n                    _this2.messagesByIndex.set(message.index, message);\n                    message.on('updated', function (args) {\n                        return _this2.emit('messageUpdated', args);\n                    });\n                    _this2.emit('messageAdded', message);\n                });\n                list.on('itemRemoved', function (args) {\n                    log.debug(_this2.conversation.sid + ' itemRemoved: ' + args.index);\n                    var index = args.index;\n                    if (_this2.messagesByIndex.has(index)) {\n                        var message = _this2.messagesByIndex.get(index);\n                        _this2.messagesByIndex.delete(message.index);\n                        message.removeAllListeners('updated');\n                        _this2.emit('messageRemoved', message);\n                    }\n                });\n                list.on('itemUpdated', function (args) {\n                    log.debug(_this2.conversation.sid + ' itemUpdated: ' + args.item.index);\n                    var message = _this2.messagesByIndex.get(args.item.index);\n                    if (message) {\n                        message._update(args.item.value);\n                    }\n                });\n                return list;\n            }).catch(function (err) {\n                _this2.messagesListPromise = null;\n                if (_this2.services.syncClient.connectionState != 'disconnected') {\n                    log.error('Failed to get messages object for conversation', _this2.conversation.sid, err);\n                }\n                log.debug('ERROR: Failed to get messages object for conversation', _this2.conversation.sid, err);\n                throw err;\n            });\n        }\n    }, {\n        key: \"unsubscribe\",\n        value: function () {\n            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n                var entity;\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                if (!this.messagesListPromise) {\n                                    _context.next = 6;\n                                    break;\n                                }\n\n                                _context.next = 3;\n                                return this.messagesListPromise;\n\n                            case 3:\n                                entity = _context.sent;\n\n                                entity.close();\n                                this.messagesListPromise = null;\n\n                            case 6:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function unsubscribe() {\n                return _ref.apply(this, arguments);\n            }\n\n            return unsubscribe;\n        }()\n        /**\n         * Send Message to the conversation\n         * @param {String} message - Message to post\n         * @param {any} attributes Message attributes\n         * @returns Returns promise which can fail\n         */\n\n    }, {\n        key: \"send\",\n        value: function () {\n            var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(message) {\n                var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                return _regenerator2.default.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                log.debug('Sending text message', message, attributes);\n                                return _context2.abrupt(\"return\", this.services.session.addCommand('sendMessage', {\n                                    channelSid: this.conversation.sid,\n                                    text: message,\n                                    attributes: (0, _stringify2.default)(attributes)\n                                }));\n\n                            case 2:\n                            case \"end\":\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            }));\n\n            function send(_x2) {\n                return _ref2.apply(this, arguments);\n            }\n\n            return send;\n        }()\n        /**\n         * Send Media Message to the conversation\n         * @param {FormData | Conversation#SendMediaOptions} mediaContent - Media content to post\n         * @param {any} attributes Message attributes\n         * @returns Returns promise which can fail\n         */\n\n    }, {\n        key: \"sendMedia\",\n        value: function () {\n            var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(mediaContent) {\n                var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                var media, mediaOptions;\n                return _regenerator2.default.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                log.debug('Sending media message', mediaContent, attributes);\n                                media = void 0;\n\n                                if (!(typeof FormData !== 'undefined' && mediaContent instanceof FormData)) {\n                                    _context3.next = 9;\n                                    break;\n                                }\n\n                                log.debug('Sending media message as FormData', mediaContent, attributes);\n                                _context3.next = 6;\n                                return this.services.mcsClient.postFormData(mediaContent);\n\n                            case 6:\n                                media = _context3.sent;\n                                _context3.next = 16;\n                                break;\n\n                            case 9:\n                                log.debug('Sending media message as SendMediaOptions', mediaContent, attributes);\n                                mediaOptions = mediaContent;\n\n                                if (!(!mediaOptions.contentType || !mediaOptions.media)) {\n                                    _context3.next = 13;\n                                    break;\n                                }\n\n                                throw new Error('Media content <Conversation#SendMediaOptions> must contain non-empty contentType and media');\n\n                            case 13:\n                                _context3.next = 15;\n                                return this.services.mcsClient.post(mediaOptions.contentType, mediaOptions.media);\n\n                            case 15:\n                                media = _context3.sent;\n\n                            case 16:\n                                return _context3.abrupt(\"return\", this.services.session.addCommand('sendMediaMessage', {\n                                    channelSid: this.conversation.sid,\n                                    mediaSid: media.sid,\n                                    attributes: (0, _stringify2.default)(attributes)\n                                }));\n\n                            case 17:\n                            case \"end\":\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            }));\n\n            function sendMedia(_x4) {\n                return _ref3.apply(this, arguments);\n            }\n\n            return sendMedia;\n        }()\n        /**\n         * Returns messages from conversation using paginator interface\n         * @param {Number} [pageSize] Number of messages to return in single chunk. By default it's 30.\n         * @param {String} [anchor] Most early message id which is already known, or 'end' by default\n         * @param {String} [direction] Pagination order 'backwards' or 'forward', or 'forward' by default\n         * @returns {Promise<Paginator<Message>>} last page of messages by default\n         */\n\n    }, {\n        key: \"getMessages\",\n        value: function getMessages(pageSize, anchor, direction) {\n            anchor = typeof anchor !== 'undefined' ? anchor : 'end';\n            direction = direction || 'backwards';\n            return this._getMessages(pageSize, anchor, direction);\n        }\n    }, {\n        key: \"wrapPaginator\",\n        value: function wrapPaginator(order, page, op) {\n            var _this3 = this;\n\n            // We should swap next and prev page here, because of misfit of Sync and Chat paging conceptions\n            var shouldReverse = order === 'desc';\n            var np = function np() {\n                return page.nextPage().then(function (x) {\n                    return _this3.wrapPaginator(order, x, op);\n                });\n            };\n            var pp = function pp() {\n                return page.prevPage().then(function (x) {\n                    return _this3.wrapPaginator(order, x, op);\n                });\n            };\n            return op(page.items).then(function (items) {\n                return {\n                    items: items.sort(function (x, y) {\n                        return x.index - y.index;\n                    }),\n                    hasPrevPage: shouldReverse ? page.hasNextPage : page.hasPrevPage,\n                    hasNextPage: shouldReverse ? page.hasPrevPage : page.hasNextPage,\n                    prevPage: shouldReverse ? np : pp,\n                    nextPage: shouldReverse ? pp : np\n                };\n            });\n        }\n    }, {\n        key: \"_upsertMessage\",\n        value: function _upsertMessage(index, value) {\n            var _this4 = this;\n\n            var cachedMessage = this.messagesByIndex.get(index);\n            if (cachedMessage) {\n                return cachedMessage;\n            }\n            var message = new message_1.Message(this.conversation, this.services, index, value);\n            this.messagesByIndex.set(message.index, message);\n            message.on('updated', function (args) {\n                return _this4.emit('messageUpdated', args);\n            });\n            return message;\n        }\n        /**\n         * Returns last messages from conversation\n         * @param {Number} [pageSize] Number of messages to return in single chunk. By default it's 30.\n         * @param {String} [anchor] Most early message id which is already known, or 'end' by default\n         * @param {String} [direction] Pagination order 'backwards' or 'forward', or 'forward' by default\n         * @returns {Promise<SyncPaginator<Message>>} last page of messages by default\n         * @private\n         */\n\n    }, {\n        key: \"_getMessages\",\n        value: function _getMessages(pageSize, anchor, direction) {\n            var _this5 = this;\n\n            anchor = typeof anchor !== 'undefined' ? anchor : 'end';\n            pageSize = pageSize || 30;\n            var order = direction === 'backwards' ? 'desc' : 'asc';\n            return this.messagesListPromise.then(function (messagesList) {\n                return messagesList.getItems({\n                    from: anchor !== 'end' ? anchor : void 0,\n                    pageSize: pageSize,\n                    order: order\n                });\n            }).then(function (page) {\n                return _this5.wrapPaginator(order, page, function (items) {\n                    return _promise2.default.all(items.map(function (item) {\n                        return _this5._upsertMessage(item.index, item.value);\n                    }));\n                });\n            });\n        }\n    }]);\n    return Messages;\n}(events_1.EventEmitter);\n\nexports.Messages = Messages;"]},"metadata":{},"sourceType":"script"}