{"ast":null,"code":"\"use strict\";\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Participants = void 0;\n\nvar events_1 = require(\"events\");\n\nvar participant_1 = require(\"../participant\");\n\nvar logger_1 = require(\"../logger\");\n\nvar log = logger_1.Logger.scope('Participants');\n/**\n * @classdesc Represents the collection of participants for the conversation\n * @fires Participants#participantJoined\n * @fires Participants#participantLeft\n * @fires Participants#participantUpdated\n */\n\nvar Participants = function (_events_1$EventEmitte) {\n  (0, _inherits3.default)(Participants, _events_1$EventEmitte);\n\n  function Participants(conversation, services, participants) {\n    (0, _classCallCheck3.default)(this, Participants);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Participants.__proto__ || (0, _getPrototypeOf2.default)(Participants)).call(this));\n\n    _this.services = services;\n    _this.conversation = conversation;\n    _this.participants = participants;\n    return _this;\n  }\n\n  (0, _createClass3.default)(Participants, [{\n    key: \"unsubscribe\",\n    value: function () {\n      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n        var entity;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.rosterEntityPromise) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.rosterEntityPromise;\n\n              case 3:\n                entity = _context.sent;\n                entity.close();\n                this.rosterEntityPromise = null;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function unsubscribe() {\n        return _ref.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(rosterObjectName) {\n      var _this2 = this;\n\n      return this.rosterEntityPromise = this.rosterEntityPromise || this.services.syncClient.map({\n        id: rosterObjectName,\n        mode: 'open_existing'\n      }).then(function (rosterMap) {\n        rosterMap.on('itemAdded', function (args) {\n          log.debug(_this2.conversation.sid + ' itemAdded: ' + args.item.key);\n\n          _this2.upsertParticipant(args.item.key, args.item.value).then(function (participant) {\n            _this2.emit('participantJoined', participant);\n          });\n        });\n        rosterMap.on('itemRemoved', function (args) {\n          log.debug(_this2.conversation.sid + ' itemRemoved: ' + args.key);\n          var participantSid = args.key;\n\n          if (!_this2.participants.has(participantSid)) {\n            return;\n          }\n\n          var leftParticipant = _this2.participants.get(participantSid);\n\n          _this2.participants.delete(participantSid);\n\n          _this2.emit('participantLeft', leftParticipant);\n        });\n        rosterMap.on('itemUpdated', function (args) {\n          log.debug(_this2.conversation.sid + ' itemUpdated: ' + args.item.key);\n\n          _this2.upsertParticipant(args.item.key, args.item.value);\n        });\n        var participantsPromises = [];\n        var that = _this2;\n\n        var rosterMapHandler = function rosterMapHandler(paginator) {\n          paginator.items.forEach(function (item) {\n            participantsPromises.push(that.upsertParticipant(item.key, item.value));\n          });\n          return paginator.hasNextPage ? paginator.nextPage().then(rosterMapHandler) : null;\n        };\n\n        return rosterMap.getItems().then(rosterMapHandler).then(function () {\n          return _promise2.default.all(participantsPromises);\n        }).then(function () {\n          return rosterMap;\n        });\n      }).catch(function (err) {\n        _this2.rosterEntityPromise = null;\n\n        if (_this2.services.syncClient.connectionState != 'disconnected') {\n          log.error('Failed to get roster object for conversation', _this2.conversation.sid, err);\n        }\n\n        log.debug('ERROR: Failed to get roster object for conversation', _this2.conversation.sid, err);\n        throw err;\n      });\n    }\n  }, {\n    key: \"upsertParticipant\",\n    value: function () {\n      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(participantSid, data) {\n        var _this3 = this;\n\n        var participant;\n        return _regenerator2.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                participant = this.participants.get(participantSid);\n\n                if (!participant) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", participant._update(data));\n\n              case 3:\n                participant = new participant_1.Participant(this.services, this.conversation, data, participantSid);\n                this.participants.set(participantSid, participant);\n                participant.on('updated', function (args) {\n                  return _this3.emit('participantUpdated', args);\n                });\n                return _context2.abrupt(\"return\", participant);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function upsertParticipant(_x, _x2) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return upsertParticipant;\n    }()\n    /**\n     * @returns {Promise<Array<Participant>>} returns list of participants {@see Participant}\n     */\n\n  }, {\n    key: \"getParticipants\",\n    value: function getParticipants() {\n      var _this4 = this;\n\n      return this.rosterEntityPromise.then(function () {\n        var participants = [];\n\n        _this4.participants.forEach(function (participant) {\n          return participants.push(participant);\n        });\n\n        return participants;\n      });\n    }\n    /**\n     * Get participant by SID from conversation\n     * @returns {Promise<Participant>}\n     */\n\n  }, {\n    key: \"getParticipantBySid\",\n    value: function () {\n      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(participantSid) {\n        var _this5 = this;\n\n        return _regenerator2.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.rosterEntityPromise.then(function () {\n                  var participant = _this5.participants.get(participantSid);\n\n                  if (!participant) {\n                    throw new Error('Participant with SID ' + participantSid + ' was not found');\n                  }\n\n                  return participant;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getParticipantBySid(_x3) {\n        return _ref3.apply(this, arguments);\n      }\n\n      return getParticipantBySid;\n    }()\n    /**\n     * Get participant by identity from conversation\n     * @returns {Promise<Participant>}\n     */\n\n  }, {\n    key: \"getParticipantByIdentity\",\n    value: function () {\n      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(identity) {\n        var _this6 = this;\n\n        var foundParticipant;\n        return _regenerator2.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                foundParticipant = null;\n                return _context4.abrupt(\"return\", this.rosterEntityPromise.then(function () {\n                  _this6.participants.forEach(function (participant) {\n                    if (participant.identity === identity) {\n                      foundParticipant = participant;\n                    }\n                  });\n\n                  if (!foundParticipant) {\n                    throw new Error('Participant with identity ' + identity + ' was not found');\n                  }\n\n                  return foundParticipant;\n                }));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getParticipantByIdentity(_x4) {\n        return _ref4.apply(this, arguments);\n      }\n\n      return getParticipantByIdentity;\n    }()\n    /**\n     * Add a chat participant to the conversation\n     * @returns {Promise<any>}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(identity) {\n      return this.services.session.addCommand('addMemberV2', {\n        channelSid: this.conversation.sid,\n        username: identity\n      });\n    }\n    /**\n     * Add a non-chat participant to the conversation.\n     *\n     * @param proxyAddress\n     * @param address\n     * @param attributes\n     * @returns {Promise<any>}\n     */\n\n  }, {\n    key: \"addNonChatParticipant\",\n    value: function addNonChatParticipant(proxyAddress, address) {\n      var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.services.session.addCommand('addNonChatParticipant', {\n        conversationSid: this.conversation.sid,\n        proxyAddress: proxyAddress,\n        attributes: (0, _stringify2.default)(attributes),\n        address: address\n      });\n    }\n    /**\n     * Invites user to the conversation\n     * User can choose either to join or not\n     * @returns {Promise<any>}\n     */\n\n  }, {\n    key: \"invite\",\n    value: function invite(identity) {\n      return this.services.session.addCommand('inviteMember', {\n        channelSid: this.conversation.sid,\n        username: identity\n      });\n    }\n    /**\n     * Remove participant from conversation by Identity\n     * @returns {Promise<any>}\n     */\n\n  }, {\n    key: \"removeByIdentity\",\n    value: function removeByIdentity(identity) {\n      return this.services.session.addCommand('removeMember', {\n        channelSid: this.conversation.sid,\n        username: identity\n      });\n    }\n    /**\n     * Remove participant from conversation by sid\n     * @returns {Promise<any>}\n     */\n\n  }, {\n    key: \"removeBySid\",\n    value: function removeBySid(sid) {\n      return this.services.session.addCommand('removeMember', {\n        channelSid: this.conversation.sid,\n        memberSid: sid\n      });\n    }\n  }]);\n  return Participants;\n}(events_1.EventEmitter);\n\nexports.Participants = Participants;\n/**\n * Fired when participant joined conversation\n * @event Participants#participantJoined\n * @type {Participant}\n */\n\n/**\n * Fired when participant left conversation\n * @event Participants#participantLeft\n * @type {Participant}\n */\n\n/**\n * Fired when participant updated\n * @event Participants#participantUpdated\n * @type {Object}\n * @property {Participant} participant - Updated Participant\n * @property {Participant#UpdateReason[]} updateReasons - Array of Participant's updated event reasons\n */","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/@twilio/conversations/browser/data/participants.js"],"names":["_stringify","require","_stringify2","_interopRequireDefault","_promise","_promise2","_regenerator","_regenerator2","_asyncToGenerator2","_asyncToGenerator3","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","obj","__esModule","default","Object","defineProperty","exports","value","Participants","events_1","participant_1","logger_1","log","Logger","scope","_events_1$EventEmitte","conversation","services","participants","_this","__proto__","call","key","_ref","mark","_callee","entity","wrap","_callee$","_context","prev","next","rosterEntityPromise","sent","close","stop","unsubscribe","apply","arguments","subscribe","rosterObjectName","_this2","syncClient","map","id","mode","then","rosterMap","on","args","debug","sid","item","upsertParticipant","participant","emit","participantSid","has","leftParticipant","get","delete","participantsPromises","that","rosterMapHandler","paginator","items","forEach","push","hasNextPage","nextPage","getItems","all","catch","err","connectionState","error","_ref2","_callee2","data","_this3","_callee2$","_context2","abrupt","_update","Participant","set","_x","_x2","getParticipants","_this4","_ref3","_callee3","_this5","_callee3$","_context3","Error","getParticipantBySid","_x3","_ref4","_callee4","identity","_this6","foundParticipant","_callee4$","_context4","getParticipantByIdentity","_x4","add","session","addCommand","channelSid","username","addNonChatParticipant","proxyAddress","address","attributes","length","undefined","conversationSid","invite","removeByIdentity","removeBySid","memberSid","EventEmitter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Participants = void 0;\nvar events_1 = require(\"events\");\nvar participant_1 = require(\"../participant\");\nvar logger_1 = require(\"../logger\");\nvar log = logger_1.Logger.scope('Participants');\n/**\n * @classdesc Represents the collection of participants for the conversation\n * @fires Participants#participantJoined\n * @fires Participants#participantLeft\n * @fires Participants#participantUpdated\n */\n\nvar Participants = function (_events_1$EventEmitte) {\n    (0, _inherits3.default)(Participants, _events_1$EventEmitte);\n\n    function Participants(conversation, services, participants) {\n        (0, _classCallCheck3.default)(this, Participants);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Participants.__proto__ || (0, _getPrototypeOf2.default)(Participants)).call(this));\n\n        _this.services = services;\n        _this.conversation = conversation;\n        _this.participants = participants;\n        return _this;\n    }\n\n    (0, _createClass3.default)(Participants, [{\n        key: \"unsubscribe\",\n        value: function () {\n            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n                var entity;\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                if (!this.rosterEntityPromise) {\n                                    _context.next = 6;\n                                    break;\n                                }\n\n                                _context.next = 3;\n                                return this.rosterEntityPromise;\n\n                            case 3:\n                                entity = _context.sent;\n\n                                entity.close();\n                                this.rosterEntityPromise = null;\n\n                            case 6:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function unsubscribe() {\n                return _ref.apply(this, arguments);\n            }\n\n            return unsubscribe;\n        }()\n    }, {\n        key: \"subscribe\",\n        value: function subscribe(rosterObjectName) {\n            var _this2 = this;\n\n            return this.rosterEntityPromise = this.rosterEntityPromise || this.services.syncClient.map({ id: rosterObjectName, mode: 'open_existing' }).then(function (rosterMap) {\n                rosterMap.on('itemAdded', function (args) {\n                    log.debug(_this2.conversation.sid + ' itemAdded: ' + args.item.key);\n                    _this2.upsertParticipant(args.item.key, args.item.value).then(function (participant) {\n                        _this2.emit('participantJoined', participant);\n                    });\n                });\n                rosterMap.on('itemRemoved', function (args) {\n                    log.debug(_this2.conversation.sid + ' itemRemoved: ' + args.key);\n                    var participantSid = args.key;\n                    if (!_this2.participants.has(participantSid)) {\n                        return;\n                    }\n                    var leftParticipant = _this2.participants.get(participantSid);\n                    _this2.participants.delete(participantSid);\n                    _this2.emit('participantLeft', leftParticipant);\n                });\n                rosterMap.on('itemUpdated', function (args) {\n                    log.debug(_this2.conversation.sid + ' itemUpdated: ' + args.item.key);\n                    _this2.upsertParticipant(args.item.key, args.item.value);\n                });\n                var participantsPromises = [];\n                var that = _this2;\n                var rosterMapHandler = function rosterMapHandler(paginator) {\n                    paginator.items.forEach(function (item) {\n                        participantsPromises.push(that.upsertParticipant(item.key, item.value));\n                    });\n                    return paginator.hasNextPage ? paginator.nextPage().then(rosterMapHandler) : null;\n                };\n                return rosterMap.getItems().then(rosterMapHandler).then(function () {\n                    return _promise2.default.all(participantsPromises);\n                }).then(function () {\n                    return rosterMap;\n                });\n            }).catch(function (err) {\n                _this2.rosterEntityPromise = null;\n                if (_this2.services.syncClient.connectionState != 'disconnected') {\n                    log.error('Failed to get roster object for conversation', _this2.conversation.sid, err);\n                }\n                log.debug('ERROR: Failed to get roster object for conversation', _this2.conversation.sid, err);\n                throw err;\n            });\n        }\n    }, {\n        key: \"upsertParticipant\",\n        value: function () {\n            var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(participantSid, data) {\n                var _this3 = this;\n\n                var participant;\n                return _regenerator2.default.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                participant = this.participants.get(participantSid);\n\n                                if (!participant) {\n                                    _context2.next = 3;\n                                    break;\n                                }\n\n                                return _context2.abrupt(\"return\", participant._update(data));\n\n                            case 3:\n                                participant = new participant_1.Participant(this.services, this.conversation, data, participantSid);\n                                this.participants.set(participantSid, participant);\n                                participant.on('updated', function (args) {\n                                    return _this3.emit('participantUpdated', args);\n                                });\n                                return _context2.abrupt(\"return\", participant);\n\n                            case 7:\n                            case \"end\":\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            }));\n\n            function upsertParticipant(_x, _x2) {\n                return _ref2.apply(this, arguments);\n            }\n\n            return upsertParticipant;\n        }()\n        /**\n         * @returns {Promise<Array<Participant>>} returns list of participants {@see Participant}\n         */\n\n    }, {\n        key: \"getParticipants\",\n        value: function getParticipants() {\n            var _this4 = this;\n\n            return this.rosterEntityPromise.then(function () {\n                var participants = [];\n                _this4.participants.forEach(function (participant) {\n                    return participants.push(participant);\n                });\n                return participants;\n            });\n        }\n        /**\n         * Get participant by SID from conversation\n         * @returns {Promise<Participant>}\n         */\n\n    }, {\n        key: \"getParticipantBySid\",\n        value: function () {\n            var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(participantSid) {\n                var _this5 = this;\n\n                return _regenerator2.default.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                return _context3.abrupt(\"return\", this.rosterEntityPromise.then(function () {\n                                    var participant = _this5.participants.get(participantSid);\n                                    if (!participant) {\n                                        throw new Error('Participant with SID ' + participantSid + ' was not found');\n                                    }\n                                    return participant;\n                                }));\n\n                            case 1:\n                            case \"end\":\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            }));\n\n            function getParticipantBySid(_x3) {\n                return _ref3.apply(this, arguments);\n            }\n\n            return getParticipantBySid;\n        }()\n        /**\n         * Get participant by identity from conversation\n         * @returns {Promise<Participant>}\n         */\n\n    }, {\n        key: \"getParticipantByIdentity\",\n        value: function () {\n            var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(identity) {\n                var _this6 = this;\n\n                var foundParticipant;\n                return _regenerator2.default.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                foundParticipant = null;\n                                return _context4.abrupt(\"return\", this.rosterEntityPromise.then(function () {\n                                    _this6.participants.forEach(function (participant) {\n                                        if (participant.identity === identity) {\n                                            foundParticipant = participant;\n                                        }\n                                    });\n                                    if (!foundParticipant) {\n                                        throw new Error('Participant with identity ' + identity + ' was not found');\n                                    }\n                                    return foundParticipant;\n                                }));\n\n                            case 2:\n                            case \"end\":\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            }));\n\n            function getParticipantByIdentity(_x4) {\n                return _ref4.apply(this, arguments);\n            }\n\n            return getParticipantByIdentity;\n        }()\n        /**\n         * Add a chat participant to the conversation\n         * @returns {Promise<any>}\n         */\n\n    }, {\n        key: \"add\",\n        value: function add(identity) {\n            return this.services.session.addCommand('addMemberV2', {\n                channelSid: this.conversation.sid,\n                username: identity\n            });\n        }\n        /**\n         * Add a non-chat participant to the conversation.\n         *\n         * @param proxyAddress\n         * @param address\n         * @param attributes\n         * @returns {Promise<any>}\n         */\n\n    }, {\n        key: \"addNonChatParticipant\",\n        value: function addNonChatParticipant(proxyAddress, address) {\n            var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n            return this.services.session.addCommand('addNonChatParticipant', {\n                conversationSid: this.conversation.sid,\n                proxyAddress: proxyAddress,\n                attributes: (0, _stringify2.default)(attributes),\n                address: address\n            });\n        }\n        /**\n         * Invites user to the conversation\n         * User can choose either to join or not\n         * @returns {Promise<any>}\n         */\n\n    }, {\n        key: \"invite\",\n        value: function invite(identity) {\n            return this.services.session.addCommand('inviteMember', {\n                channelSid: this.conversation.sid,\n                username: identity\n            });\n        }\n        /**\n         * Remove participant from conversation by Identity\n         * @returns {Promise<any>}\n         */\n\n    }, {\n        key: \"removeByIdentity\",\n        value: function removeByIdentity(identity) {\n            return this.services.session.addCommand('removeMember', {\n                channelSid: this.conversation.sid,\n                username: identity\n            });\n        }\n        /**\n         * Remove participant from conversation by sid\n         * @returns {Promise<any>}\n         */\n\n    }, {\n        key: \"removeBySid\",\n        value: function removeBySid(sid) {\n            return this.services.session.addCommand('removeMember', {\n                channelSid: this.conversation.sid,\n                memberSid: sid\n            });\n        }\n    }]);\n    return Participants;\n}(events_1.EventEmitter);\n\nexports.Participants = Participants;\n/**\n * Fired when participant joined conversation\n * @event Participants#participantJoined\n * @type {Participant}\n */\n/**\n * Fired when participant left conversation\n * @event Participants#participantLeft\n * @type {Participant}\n */\n/**\n * Fired when participant updated\n * @event Participants#participantUpdated\n * @type {Object}\n * @property {Participant} participant - Updated Participant\n * @property {Participant#UpdateReason[]} updateReasons - Array of Participant's updated event reasons\n */"]},"metadata":{},"sourceType":"script"}