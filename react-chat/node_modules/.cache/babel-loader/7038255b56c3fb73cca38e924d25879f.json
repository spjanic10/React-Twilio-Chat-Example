{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Configuration = void 0;\nvar SUBSCRIPTIONS_PATH = '/v4/Subscriptions';\nvar MAPS_PATH = '/v3/Maps';\nvar LISTS_PATH = '/v3/Lists';\nvar DOCUMENTS_PATH = '/v3/Documents';\nvar STREAMS_PATH = '/v3/Streams';\nvar INSIGHTS_PATH = '/v3/Insights';\n\nfunction getWithDefault(container, key, defaultValue) {\n  if (container && typeof container[key] !== 'undefined') {\n    return container[key];\n  }\n\n  return defaultValue;\n}\n/**\n * Settings container for Sync library\n */\n\n\nvar Configuration = /*#__PURE__*/function () {\n  /**\n   * @param {Object} options\n   */\n  function Configuration() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Configuration);\n\n    var region = options.region || 'us1';\n    var defaultCdsUrl = \"https://cds.\".concat(region, \".twilio.com\");\n    var baseUri = options.cdsUri || defaultCdsUrl;\n    this.settings = {\n      subscriptionsUri: baseUri + SUBSCRIPTIONS_PATH,\n      documentsUri: baseUri + DOCUMENTS_PATH,\n      listsUri: baseUri + LISTS_PATH,\n      mapsUri: baseUri + MAPS_PATH,\n      streamsUri: baseUri + STREAMS_PATH,\n      insightsUri: baseUri + INSIGHTS_PATH,\n      sessionStorageEnabled: getWithDefault(options.Sync, 'enableSessionStorage', true)\n    };\n  }\n\n  _createClass(Configuration, [{\n    key: \"subscriptionsUri\",\n    get: function get() {\n      return this.settings.subscriptionsUri;\n    }\n  }, {\n    key: \"documentsUri\",\n    get: function get() {\n      return this.settings.documentsUri;\n    }\n  }, {\n    key: \"listsUri\",\n    get: function get() {\n      return this.settings.listsUri;\n    }\n  }, {\n    key: \"mapsUri\",\n    get: function get() {\n      return this.settings.mapsUri;\n    }\n  }, {\n    key: \"streamsUri\",\n    get: function get() {\n      return this.settings.streamsUri;\n    }\n  }, {\n    key: \"insightsUri\",\n    get: function get() {\n      return this.settings.insightsUri;\n    }\n  }, {\n    key: \"backoffConfig\",\n    get: function get() {\n      return this.settings.backoffConfig || {};\n    }\n  }, {\n    key: \"sessionStorageEnabled\",\n    get: function get() {\n      return this.settings.sessionStorageEnabled;\n    }\n  }]);\n\n  return Configuration;\n}();\n\nexports.Configuration = Configuration;","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/twilio-sync/lib/configuration.js"],"names":["Object","defineProperty","exports","value","Configuration","SUBSCRIPTIONS_PATH","MAPS_PATH","LISTS_PATH","DOCUMENTS_PATH","STREAMS_PATH","INSIGHTS_PATH","getWithDefault","container","key","defaultValue","options","region","defaultCdsUrl","baseUri","cdsUri","settings","subscriptionsUri","documentsUri","listsUri","mapsUri","streamsUri","insightsUri","sessionStorageEnabled","Sync","backoffConfig"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;AACA,IAAMC,kBAAkB,GAAG,mBAA3B;AACA,IAAMC,SAAS,GAAG,UAAlB;AACA,IAAMC,UAAU,GAAG,WAAnB;AACA,IAAMC,cAAc,GAAG,eAAvB;AACA,IAAMC,YAAY,GAAG,aAArB;AACA,IAAMC,aAAa,GAAG,cAAtB;;AACA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,GAAnC,EAAwCC,YAAxC,EAAsD;AAClD,MAAIF,SAAS,IAAI,OAAOA,SAAS,CAACC,GAAD,CAAhB,KAA0B,WAA3C,EAAwD;AACpD,WAAOD,SAAS,CAACC,GAAD,CAAhB;AACH;;AACD,SAAOC,YAAP;AACH;AACD;AACA;AACA;;;IACMV,a;AACF;AACJ;AACA;AACI,2BAA0B;AAAA,QAAdW,OAAc,uEAAJ,EAAI;;AAAA;;AACtB,QAAMC,MAAM,GAAGD,OAAO,CAACC,MAAR,IAAkB,KAAjC;AACA,QAAMC,aAAa,yBAAkBD,MAAlB,gBAAnB;AACA,QAAME,OAAO,GAAGH,OAAO,CAACI,MAAR,IAAkBF,aAAlC;AACA,SAAKG,QAAL,GAAgB;AACZC,MAAAA,gBAAgB,EAAEH,OAAO,GAAGb,kBADhB;AAEZiB,MAAAA,YAAY,EAAEJ,OAAO,GAAGV,cAFZ;AAGZe,MAAAA,QAAQ,EAAEL,OAAO,GAAGX,UAHR;AAIZiB,MAAAA,OAAO,EAAEN,OAAO,GAAGZ,SAJP;AAKZmB,MAAAA,UAAU,EAAEP,OAAO,GAAGT,YALV;AAMZiB,MAAAA,WAAW,EAAER,OAAO,GAAGR,aANX;AAOZiB,MAAAA,qBAAqB,EAAEhB,cAAc,CAACI,OAAO,CAACa,IAAT,EAAe,sBAAf,EAAuC,IAAvC;AAPzB,KAAhB;AASH;;;;SACD,eAAuB;AACnB,aAAO,KAAKR,QAAL,CAAcC,gBAArB;AACH;;;SACD,eAAmB;AACf,aAAO,KAAKD,QAAL,CAAcE,YAArB;AACH;;;SACD,eAAe;AACX,aAAO,KAAKF,QAAL,CAAcG,QAArB;AACH;;;SACD,eAAc;AACV,aAAO,KAAKH,QAAL,CAAcI,OAArB;AACH;;;SACD,eAAiB;AACb,aAAO,KAAKJ,QAAL,CAAcK,UAArB;AACH;;;SACD,eAAkB;AACd,aAAO,KAAKL,QAAL,CAAcM,WAArB;AACH;;;SACD,eAAoB;AAChB,aAAO,KAAKN,QAAL,CAAcS,aAAd,IAA+B,EAAtC;AACH;;;SACD,eAA4B;AACxB,aAAO,KAAKT,QAAL,CAAcO,qBAArB;AACH;;;;;;AAELzB,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Configuration = void 0;\nconst SUBSCRIPTIONS_PATH = '/v4/Subscriptions';\nconst MAPS_PATH = '/v3/Maps';\nconst LISTS_PATH = '/v3/Lists';\nconst DOCUMENTS_PATH = '/v3/Documents';\nconst STREAMS_PATH = '/v3/Streams';\nconst INSIGHTS_PATH = '/v3/Insights';\nfunction getWithDefault(container, key, defaultValue) {\n    if (container && typeof container[key] !== 'undefined') {\n        return container[key];\n    }\n    return defaultValue;\n}\n/**\n * Settings container for Sync library\n */\nclass Configuration {\n    /**\n     * @param {Object} options\n     */\n    constructor(options = {}) {\n        const region = options.region || 'us1';\n        const defaultCdsUrl = `https://cds.${region}.twilio.com`;\n        const baseUri = options.cdsUri || defaultCdsUrl;\n        this.settings = {\n            subscriptionsUri: baseUri + SUBSCRIPTIONS_PATH,\n            documentsUri: baseUri + DOCUMENTS_PATH,\n            listsUri: baseUri + LISTS_PATH,\n            mapsUri: baseUri + MAPS_PATH,\n            streamsUri: baseUri + STREAMS_PATH,\n            insightsUri: baseUri + INSIGHTS_PATH,\n            sessionStorageEnabled: getWithDefault(options.Sync, 'enableSessionStorage', true)\n        };\n    }\n    get subscriptionsUri() {\n        return this.settings.subscriptionsUri;\n    }\n    get documentsUri() {\n        return this.settings.documentsUri;\n    }\n    get listsUri() {\n        return this.settings.listsUri;\n    }\n    get mapsUri() {\n        return this.settings.mapsUri;\n    }\n    get streamsUri() {\n        return this.settings.streamsUri;\n    }\n    get insightsUri() {\n        return this.settings.insightsUri;\n    }\n    get backoffConfig() {\n        return this.settings.backoffConfig || {};\n    }\n    get sessionStorageEnabled() {\n        return this.settings.sessionStorageEnabled;\n    }\n}\nexports.Configuration = Configuration;\n"]},"metadata":{},"sourceType":"script"}