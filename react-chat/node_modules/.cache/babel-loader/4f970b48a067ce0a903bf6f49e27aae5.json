{"ast":null,"code":"var _classCallCheck = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n  XMLDOMStringList = require('./XMLDOMStringList'); // Implements the DOMConfiguration interface\n\n  module.exports = XMLDOMConfiguration = function () {\n    var XMLDOMConfiguration = /*#__PURE__*/function () {\n      \"use strict\";\n\n      function XMLDOMConfiguration() {\n        _classCallCheck(this, XMLDOMConfiguration);\n\n        var clonedSelf;\n        this.defaultParams = {\n          \"canonical-form\": false,\n          \"cdata-sections\": false,\n          \"comments\": false,\n          \"datatype-normalization\": false,\n          \"element-content-whitespace\": true,\n          \"entities\": true,\n          \"error-handler\": new XMLDOMErrorHandler(),\n          \"infoset\": true,\n          \"validate-if-schema\": false,\n          \"namespaces\": true,\n          \"namespace-declarations\": true,\n          \"normalize-characters\": false,\n          \"schema-location\": '',\n          \"schema-type\": '',\n          \"split-cdata-sections\": true,\n          \"validate\": false,\n          \"well-formed\": true\n        };\n        this.params = clonedSelf = Object.create(this.defaultParams);\n      } // Gets the value of a parameter.\n      // `name` name of the parameter\n\n\n      _createClass(XMLDOMConfiguration, [{\n        key: \"getParameter\",\n        value: function getParameter(name) {\n          if (this.params.hasOwnProperty(name)) {\n            return this.params[name];\n          } else {\n            return null;\n          }\n        } // Checks if setting a parameter to a specific value is supported.\n        // `name` name of the parameter\n        // `value` parameter value\n\n      }, {\n        key: \"canSetParameter\",\n        value: function canSetParameter(name, value) {\n          return true;\n        } // Sets the value of a parameter.\n        // `name` name of the parameter\n        // `value` new value or null if the user wishes to unset the parameter\n\n      }, {\n        key: \"setParameter\",\n        value: function setParameter(name, value) {\n          if (value != null) {\n            return this.params[name] = value;\n          } else {\n            return delete this.params[name];\n          }\n        }\n      }]);\n\n      return XMLDOMConfiguration;\n    }();\n\n    ; // Returns the list of parameter names\n\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function get() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n    return XMLDOMConfiguration;\n  }.call(this);\n}).call(this);","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/xmlbuilder/lib/XMLDOMConfiguration.js"],"names":["XMLDOMConfiguration","XMLDOMErrorHandler","XMLDOMStringList","require","module","exports","clonedSelf","defaultParams","params","Object","create","name","hasOwnProperty","value","defineProperty","prototype","get","keys","call"],"mappings":";;;;AAAA;AACA,CAAC,YAAW;AACV,MAAIA,mBAAJ,EAAyBC,kBAAzB,EAA6CC,gBAA7C;AAEAD,EAAAA,kBAAkB,GAAGE,OAAO,CAAC,sBAAD,CAA5B;AAEAD,EAAAA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA1B,CALU,CAOV;;AACAC,EAAAA,MAAM,CAACC,OAAP,GAAiBL,mBAAmB,GAAI,YAAW;AAAA,QAC3CA,mBAD2C;AAAA;;AAE/C,qCAAc;AAAA;;AACZ,YAAIM,UAAJ;AACA,aAAKC,aAAL,GAAqB;AACnB,4BAAkB,KADC;AAEnB,4BAAkB,KAFC;AAGnB,sBAAY,KAHO;AAInB,oCAA0B,KAJP;AAKnB,wCAA8B,IALX;AAMnB,sBAAY,IANO;AAOnB,2BAAiB,IAAIN,kBAAJ,EAPE;AAQnB,qBAAW,IARQ;AASnB,gCAAsB,KATH;AAUnB,wBAAc,IAVK;AAWnB,oCAA0B,IAXP;AAYnB,kCAAwB,KAZL;AAanB,6BAAmB,EAbA;AAcnB,yBAAe,EAdI;AAenB,kCAAwB,IAfL;AAgBnB,sBAAY,KAhBO;AAiBnB,yBAAe;AAjBI,SAArB;AAmBA,aAAKO,MAAL,GAAcF,UAAU,GAAGG,MAAM,CAACC,MAAP,CAAc,KAAKH,aAAnB,CAA3B;AACD,OAxB8C,CA0B/C;AAEA;;;AA5B+C;AAAA;AAAA,eA6B/C,sBAAaI,IAAb,EAAmB;AACjB,cAAI,KAAKH,MAAL,CAAYI,cAAZ,CAA2BD,IAA3B,CAAJ,EAAsC;AACpC,mBAAO,KAAKH,MAAL,CAAYG,IAAZ,CAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF,SAnC8C,CAqC/C;AAEA;AACA;;AAxC+C;AAAA;AAAA,eAyC/C,yBAAgBA,IAAhB,EAAsBE,KAAtB,EAA6B;AAC3B,iBAAO,IAAP;AACD,SA3C8C,CA6C/C;AAEA;AACA;;AAhD+C;AAAA;AAAA,eAiD/C,sBAAaF,IAAb,EAAmBE,KAAnB,EAA0B;AACxB,cAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,mBAAO,KAAKL,MAAL,CAAYG,IAAZ,IAAoBE,KAA3B;AACD,WAFD,MAEO;AACL,mBAAO,OAAO,KAAKL,MAAL,CAAYG,IAAZ,CAAd;AACD;AACF;AAvD8C;;AAAA;AAAA;;AAyDhD,KAzDgD,CA2DjD;;AACAF,IAAAA,MAAM,CAACK,cAAP,CAAsBd,mBAAmB,CAACe,SAA1C,EAAqD,gBAArD,EAAuE;AACrEC,MAAAA,GAAG,EAAE,eAAW;AACd,eAAO,IAAId,gBAAJ,CAAqBO,MAAM,CAACQ,IAAP,CAAY,KAAKV,aAAjB,CAArB,CAAP;AACD;AAHoE,KAAvE;AAMA,WAAOP,mBAAP;AAED,GApEsC,CAoEpCkB,IApEoC,CAoE/B,IApE+B,CAAvC;AAsED,CA9ED,EA8EGA,IA9EH,CA8EQ,IA9ER","sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  // Implements the DOMConfiguration interface\n  module.exports = XMLDOMConfiguration = (function() {\n    class XMLDOMConfiguration {\n      constructor() {\n        var clonedSelf;\n        this.defaultParams = {\n          \"canonical-form\": false,\n          \"cdata-sections\": false,\n          \"comments\": false,\n          \"datatype-normalization\": false,\n          \"element-content-whitespace\": true,\n          \"entities\": true,\n          \"error-handler\": new XMLDOMErrorHandler(),\n          \"infoset\": true,\n          \"validate-if-schema\": false,\n          \"namespaces\": true,\n          \"namespace-declarations\": true,\n          \"normalize-characters\": false,\n          \"schema-location\": '',\n          \"schema-type\": '',\n          \"split-cdata-sections\": true,\n          \"validate\": false,\n          \"well-formed\": true\n        };\n        this.params = clonedSelf = Object.create(this.defaultParams);\n      }\n\n      // Gets the value of a parameter.\n\n      // `name` name of the parameter\n      getParameter(name) {\n        if (this.params.hasOwnProperty(name)) {\n          return this.params[name];\n        } else {\n          return null;\n        }\n      }\n\n      // Checks if setting a parameter to a specific value is supported.\n\n      // `name` name of the parameter\n      // `value` parameter value\n      canSetParameter(name, value) {\n        return true;\n      }\n\n      // Sets the value of a parameter.\n\n      // `name` name of the parameter\n      // `value` new value or null if the user wishes to unset the parameter\n      setParameter(name, value) {\n        if (value != null) {\n          return this.params[name] = value;\n        } else {\n          return delete this.params[name];\n        }\n      }\n\n    };\n\n    // Returns the list of parameter names\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    return XMLDOMConfiguration;\n\n  }).call(this);\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}