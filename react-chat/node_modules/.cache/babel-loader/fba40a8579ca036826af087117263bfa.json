{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar log = require(\"loglevel\");\n\nfunction prepareLine(prefix, args) {\n  return [\"\".concat(new Date().toISOString(), \" MCS Client \").concat(prefix, \":\")].concat(Array.from(args));\n}\n\nvar Logger = /*#__PURE__*/function () {\n  function Logger(prefix) {\n    _classCallCheck(this, Logger);\n\n    this.prefix = '';\n    this.prefix = prefix !== null && prefix !== undefined && prefix.length > 0 ? prefix + ' ' : '';\n  }\n\n  _createClass(Logger, [{\n    key: \"setLevel\",\n    value: function setLevel(level) {\n      log.setLevel(level);\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      log.trace.apply(null, prepareLine(this.prefix + 'T', args));\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      log.debug.apply(null, prepareLine(this.prefix + 'D', args));\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      log.info.apply(null, prepareLine(this.prefix + 'I', args));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      log.warn.apply(null, prepareLine(this.prefix + 'W', args));\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      log.error.apply(null, prepareLine(this.prefix + 'E', args));\n    }\n  }], [{\n    key: \"scope\",\n    value: function scope(prefix) {\n      return new Logger(prefix);\n    }\n  }, {\n    key: \"setLevel\",\n    value: function setLevel(level) {\n      log.setLevel(level);\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      log.trace.apply(null, prepareLine('T', args));\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      log.debug.apply(null, prepareLine('D', args));\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      log.info.apply(null, prepareLine('I', args));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      log.warn.apply(null, prepareLine('W', args));\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      log.error.apply(null, prepareLine('E', args));\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.Logger = Logger;","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/twilio-mcs-client/lib/logger.js"],"names":["Object","defineProperty","exports","value","log","require","prepareLine","prefix","args","Date","toISOString","concat","Array","from","Logger","undefined","length","level","setLevel","trace","apply","debug","info","warn","error"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst log = require(\"loglevel\");\nfunction prepareLine(prefix, args) {\n    return [`${new Date().toISOString()} MCS Client ${prefix}:`].concat(Array.from(args));\n}\nclass Logger {\n    constructor(prefix) {\n        this.prefix = '';\n        this.prefix = prefix !== null && prefix !== undefined && prefix.length > 0\n            ? prefix + ' '\n            : '';\n    }\n    static scope(prefix) {\n        return new Logger(prefix);\n    }\n    setLevel(level) {\n        log.setLevel(level);\n    }\n    static setLevel(level) {\n        log.setLevel(level);\n    }\n    trace(...args) { log.trace.apply(null, prepareLine(this.prefix + 'T', args)); }\n    debug(...args) { log.debug.apply(null, prepareLine(this.prefix + 'D', args)); }\n    info(...args) { log.info.apply(null, prepareLine(this.prefix + 'I', args)); }\n    warn(...args) { log.warn.apply(null, prepareLine(this.prefix + 'W', args)); }\n    error(...args) { log.error.apply(null, prepareLine(this.prefix + 'E', args)); }\n    static trace(...args) { log.trace.apply(null, prepareLine('T', args)); }\n    static debug(...args) { log.debug.apply(null, prepareLine('D', args)); }\n    static info(...args) { log.info.apply(null, prepareLine('I', args)); }\n    static warn(...args) { log.warn.apply(null, prepareLine('W', args)); }\n    static error(...args) { log.error.apply(null, prepareLine('E', args)); }\n}\nexports.Logger = Logger;\n"]},"metadata":{},"sourceType":"script"}