{"ast":null,"code":"import _objectSpread from\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./assets/Conversation.css';import Dropzone from'react-dropzone';import styles from'./assets/Conversation.module.css';import{Button,Form,Icon,Input}from\"antd\";import ConversationsMessages from\"./ConversationsMessages\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Conversation=/*#__PURE__*/function(_Component){_inherits(Conversation,_Component);var _super=_createSuper(Conversation);function Conversation(props){var _this;_classCallCheck(this,Conversation);_this=_super.call(this,props);_this.loadMessagesFor=function(thisConversation){if(_this.state.conversationProxy===thisConversation){thisConversation.getMessages().then(function(messagePaginator){if(_this.state.conversationProxy===thisConversation){_this.setState({messages:messagePaginator.items,loadingState:'ready'});}}).catch(function(err){console.error(\"Couldn't fetch messages IMPLEMENT RETRY\",err);_this.setState({loadingState:\"failed\"});});}};_this.componentDidMount=function(){if(_this.state.conversationProxy){_this.loadMessagesFor(_this.state.conversationProxy);if(!_this.state.boundConversations.has(_this.state.conversationProxy)){var newConversation=_this.state.conversationProxy;newConversation.on('messageAdded',function(m){return _this.messageAdded(m,newConversation);});_this.setState({boundConversations:new Set([].concat(_toConsumableArray(_this.state.boundConversations),[newConversation]))});}}};_this.componentDidUpdate=function(oldProps,oldState){if(_this.state.conversationProxy!==oldState.conversationProxy){_this.loadMessagesFor(_this.state.conversationProxy);if(!_this.state.boundConversations.has(_this.state.conversationProxy)){var newConversation=_this.state.conversationProxy;newConversation.on('messageAdded',function(m){return _this.messageAdded(m,newConversation);});_this.setState({boundConversations:new Set([].concat(_toConsumableArray(_this.state.boundConversations),[newConversation]))});}}};_this.messageAdded=function(message,targetConversation){if(targetConversation===_this.state.conversationProxy)_this.setState(function(prevState,props){return{messages:[].concat(_toConsumableArray(prevState.messages),[message])};});};_this.onMessageChanged=function(event){_this.setState({newMessage:event.target.value});};_this.sendMessage=function(event){event.preventDefault();var message=_this.state.newMessage;_this.setState({newMessage:''});_this.state.conversationProxy.sendMessage(message);};_this.onDrop=function(acceptedFiles){_this.state.conversationProxy.sendMessage({contentType:acceptedFiles[0].type,media:acceptedFiles[0]});};_this.render=function(){return/*#__PURE__*/_jsx(Dropzone,{onDrop:_this.onDrop,accept:\"image/*\",children:function children(_ref){var getRootProps=_ref.getRootProps,getInputProps=_ref.getInputProps,isDragActive=_ref.isDragActive;return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},getRootProps()),{},{onClick:function onClick(){},id:\"OpenChannel\",style:{position:\"relative\",top:0},children:[isDragActive&&/*#__PURE__*/_jsxs(\"div\",{className:styles.drop,children:[/*#__PURE__*/_jsx(Icon,{type:\"cloud-upload\",style:{fontSize:\"5em\",color:\"#fefefe\"}}),/*#__PURE__*/_jsx(\"h3\",{style:{color:\"#fefefe\"},children:\"Release to Upload\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.messages,style:{filter:\"blur(\".concat(isDragActive?4:0,\"px)\")},children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({id:\"files\"},getInputProps())),/*#__PURE__*/_jsx(\"div\",{style:{flexBasis:\"100%\",flexGrow:2,flexShrink:1,overflowY:\"scroll\"},children:/*#__PURE__*/_jsx(ConversationsMessages,{identity:_this.props.myIdentity,messages:_this.state.messages})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Form,{onSubmit:_this.sendMessage,children:/*#__PURE__*/_jsxs(Input.Group,{compact:true,style:{width:\"100%\",display:\"flex\",flexDirection:\"row\"},children:[/*#__PURE__*/_jsx(Input,{style:{flexBasis:\"100%\"},placeholder:\"Type your message here...\",type:\"text\",name:\"message\",id:styles['type-a-message'],autoComplete:\"off\",disabled:_this.state.loadingState!=='ready',onChange:_this.onMessageChanged,value:_this.state.newMessage}),/*#__PURE__*/_jsx(Button,{icon:\"enter\",htmlType:\"submit\",type:\"submit\"})]})})})]})]}));}});};_this.state={newMessage:'',conversationProxy:props.conversationProxy,messages:[],loadingState:'initializing',boundConversations:new Set()};return _this;}_createClass(Conversation,null,[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(newProps,oldState){var logic=oldState.loadingState==='initializing'||oldState.conversationProxy!==newProps.conversationProxy;if(logic){return{loadingState:'loading messages',conversationProxy:newProps.conversationProxy};}else{return null;}}}]);return Conversation;}(Component);export default Conversation;","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/react-chat/src/Conversation.js"],"names":["React","Component","Dropzone","styles","Button","Form","Icon","Input","ConversationsMessages","Conversation","props","loadMessagesFor","thisConversation","state","conversationProxy","getMessages","then","messagePaginator","setState","messages","items","loadingState","catch","err","console","error","componentDidMount","boundConversations","has","newConversation","on","m","messageAdded","Set","componentDidUpdate","oldProps","oldState","message","targetConversation","prevState","onMessageChanged","event","newMessage","target","value","sendMessage","preventDefault","onDrop","acceptedFiles","contentType","type","media","render","getRootProps","getInputProps","isDragActive","position","top","drop","fontSize","color","filter","flexBasis","flexGrow","flexShrink","overflowY","myIdentity","width","display","flexDirection","newProps","logic"],"mappings":"+5BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,2BAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kCAAnB,CACA,OAAQC,MAAR,CAAgBC,IAAhB,CAAsBC,IAAtB,CAA4BC,KAA5B,KAAwC,MAAxC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,C,2FAGMC,CAAAA,Y,4GACJ,sBAAYC,KAAZ,CAAmB,8CACjB,uBAAMA,KAAN,EADiB,MAWnBC,eAXmB,CAWD,SAACC,gBAAD,CAAsB,CACtC,GAAI,MAAKC,KAAL,CAAWC,iBAAX,GAAiCF,gBAArC,CAAuD,CACnDA,gBAAgB,CAACG,WAAjB,GACKC,IADL,CACU,SAAAC,gBAAgB,CAAI,CACtB,GAAI,MAAKJ,KAAL,CAAWC,iBAAX,GAAiCF,gBAArC,CAAuD,CACnD,MAAKM,QAAL,CAAc,CAAEC,QAAQ,CAAEF,gBAAgB,CAACG,KAA7B,CAAoCC,YAAY,CAAE,OAAlD,CAAd,EACH,CACJ,CALL,EAMKC,KANL,CAMW,SAAAC,GAAG,CAAI,CACVC,OAAO,CAACC,KAAR,CAAc,yCAAd,CAAyDF,GAAzD,EACA,MAAKL,QAAL,CAAc,CAAEG,YAAY,CAAE,QAAhB,CAAd,EACH,CATL,EAUH,CACF,CAxBkB,OA0BnBK,iBA1BmB,CA0BC,UAAM,CACtB,GAAI,MAAKb,KAAL,CAAWC,iBAAf,CAAkC,CAChC,MAAKH,eAAL,CAAqB,MAAKE,KAAL,CAAWC,iBAAhC,EAEA,GAAI,CAAC,MAAKD,KAAL,CAAWc,kBAAX,CAA8BC,GAA9B,CAAkC,MAAKf,KAAL,CAAWC,iBAA7C,CAAL,CAAsE,CAClE,GAAIe,CAAAA,eAAe,CAAG,MAAKhB,KAAL,CAAWC,iBAAjC,CACAe,eAAe,CAACC,EAAhB,CAAmB,cAAnB,CAAmC,SAAAC,CAAC,QAAI,OAAKC,YAAL,CAAkBD,CAAlB,CAAqBF,eAArB,CAAJ,EAApC,EACA,MAAKX,QAAL,CAAc,CAACS,kBAAkB,CAAE,GAAIM,CAAAA,GAAJ,8BAAY,MAAKpB,KAAL,CAAWc,kBAAvB,GAA2CE,eAA3C,GAArB,CAAd,EACH,CACF,CACJ,CApCkB,OAsCnBK,kBAtCmB,CAsCE,SAACC,QAAD,CAAWC,QAAX,CAAwB,CAC3C,GAAI,MAAKvB,KAAL,CAAWC,iBAAX,GAAiCsB,QAAQ,CAACtB,iBAA9C,CAAiE,CAC7D,MAAKH,eAAL,CAAqB,MAAKE,KAAL,CAAWC,iBAAhC,EAEA,GAAI,CAAC,MAAKD,KAAL,CAAWc,kBAAX,CAA8BC,GAA9B,CAAkC,MAAKf,KAAL,CAAWC,iBAA7C,CAAL,CAAsE,CAClE,GAAIe,CAAAA,eAAe,CAAG,MAAKhB,KAAL,CAAWC,iBAAjC,CACAe,eAAe,CAACC,EAAhB,CAAmB,cAAnB,CAAmC,SAAAC,CAAC,QAAI,OAAKC,YAAL,CAAkBD,CAAlB,CAAqBF,eAArB,CAAJ,EAApC,EACA,MAAKX,QAAL,CAAc,CAACS,kBAAkB,CAAE,GAAIM,CAAAA,GAAJ,8BAAY,MAAKpB,KAAL,CAAWc,kBAAvB,GAA2CE,eAA3C,GAArB,CAAd,EACH,CACJ,CACF,CAhDkB,OA2DnBG,YA3DmB,CA2DJ,SAACK,OAAD,CAAUC,kBAAV,CAAiC,CAC9C,GAAIA,kBAAkB,GAAK,MAAKzB,KAAL,CAAWC,iBAAtC,CACI,MAAKI,QAAL,CAAc,SAACqB,SAAD,CAAY7B,KAAZ,QAAuB,CACjCS,QAAQ,8BAAMoB,SAAS,CAACpB,QAAhB,GAA0BkB,OAA1B,EADyB,CAAvB,EAAd,EAGL,CAhEkB,OAkEnBG,gBAlEmB,CAkEA,SAAAC,KAAK,CAAI,CAC1B,MAAKvB,QAAL,CAAc,CAAEwB,UAAU,CAAED,KAAK,CAACE,MAAN,CAAaC,KAA3B,CAAd,EACD,CApEkB,OAsEnBC,WAtEmB,CAsEL,SAAAJ,KAAK,CAAI,CACrBA,KAAK,CAACK,cAAN,GACA,GAAMT,CAAAA,OAAO,CAAG,MAAKxB,KAAL,CAAW6B,UAA3B,CACA,MAAKxB,QAAL,CAAc,CAAEwB,UAAU,CAAE,EAAd,CAAd,EACA,MAAK7B,KAAL,CAAWC,iBAAX,CAA6B+B,WAA7B,CAAyCR,OAAzC,EACD,CA3EkB,OA6EnBU,MA7EmB,CA6EV,SAAAC,aAAa,CAAI,CACxB,MAAKnC,KAAL,CAAWC,iBAAX,CAA6B+B,WAA7B,CAAyC,CAACI,WAAW,CAAED,aAAa,CAAC,CAAD,CAAb,CAAiBE,IAA/B,CAAqCC,KAAK,CAAEH,aAAa,CAAC,CAAD,CAAzD,CAAzC,EACD,CA/EkB,OAiFnBI,MAjFmB,CAiFV,UAAM,CACb,mBACI,KAAC,QAAD,EACI,MAAM,CAAE,MAAKL,MADjB,CAEI,MAAM,CAAC,SAFX,UAIG,2BAAEM,CAAAA,YAAF,MAAEA,YAAF,CAAgBC,aAAhB,MAAgBA,aAAhB,CAA+BC,YAA/B,MAA+BA,YAA/B,oBACG,2CACQF,YAAY,EADpB,MAEI,OAAO,CAAE,kBAAM,CACd,CAHL,CAII,EAAE,CAAC,aAJP,CAKI,KAAK,CAAE,CAACG,QAAQ,CAAE,UAAX,CAAuBC,GAAG,CAAE,CAA5B,CALX,WAOGF,YAAY,eACb,aAAK,SAAS,CAAEpD,MAAM,CAACuD,IAAvB,wBACE,KAAC,IAAD,EAAM,IAAI,CAAE,cAAZ,CACM,KAAK,CAAE,CAACC,QAAQ,CAAE,KAAX,CAAkBC,KAAK,CAAE,SAAzB,CADb,EADF,cAGE,WAAI,KAAK,CAAE,CAACA,KAAK,CAAE,SAAR,CAAX,+BAHF,GARF,cAcE,aACI,SAAS,CAAEzD,MAAM,CAACgB,QADtB,CAEI,KAAK,CAAE,CACL0C,MAAM,gBAAUN,YAAY,CAAG,CAAH,CAAO,CAA7B,OADD,CAFX,wBAME,4BAAO,EAAE,CAAC,OAAV,EAAsBD,aAAa,EAAnC,EANF,cAOE,YAAK,KAAK,CAAE,CAACQ,SAAS,CAAE,MAAZ,CAAoBC,QAAQ,CAAE,CAA9B,CAAiCC,UAAU,CAAE,CAA7C,CAAgDC,SAAS,CAAE,QAA3D,CAAZ,uBACE,KAAC,qBAAD,EACI,QAAQ,CAAE,MAAKvD,KAAL,CAAWwD,UADzB,CAEI,QAAQ,CAAE,MAAKrD,KAAL,CAAWM,QAFzB,EADF,EAPF,cAYE,kCACE,KAAC,IAAD,EAAM,QAAQ,CAAE,MAAK0B,WAArB,uBACE,MAAC,KAAD,CAAO,KAAP,EAAa,OAAO,CAAE,IAAtB,CAA4B,KAAK,CAAE,CACjCsB,KAAK,CAAE,MAD0B,CAEjCC,OAAO,CAAE,MAFwB,CAGjCC,aAAa,CAAE,KAHkB,CAAnC,wBAKE,KAAC,KAAD,EACI,KAAK,CAAE,CAACP,SAAS,CAAE,MAAZ,CADX,CAEI,WAAW,CAAE,2BAFjB,CAGI,IAAI,CAAE,MAHV,CAII,IAAI,CAAE,SAJV,CAKI,EAAE,CAAE3D,MAAM,CAAC,gBAAD,CALd,CAMI,YAAY,CAAE,KANlB,CAOI,QAAQ,CAAE,MAAKU,KAAL,CAAWQ,YAAX,GAA4B,OAP1C,CAQI,QAAQ,CAAE,MAAKmB,gBARnB,CASI,KAAK,CAAE,MAAK3B,KAAL,CAAW6B,UATtB,EALF,cAgBE,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,CAAqB,QAAQ,CAAC,QAA9B,CAAuC,IAAI,CAAE,QAA7C,EAhBF,GADF,EADF,EAZF,GAdF,IADH,EAJH,EADJ,CA4DD,CA9IkB,CAEjB,MAAK7B,KAAL,CAAa,CACT6B,UAAU,CAAE,EADH,CAET5B,iBAAiB,CAAEJ,KAAK,CAACI,iBAFhB,CAGTK,QAAQ,CAAE,EAHD,CAITE,YAAY,CAAE,cAJL,CAKTM,kBAAkB,CAAE,GAAIM,CAAAA,GAAJ,EALX,CAAb,CAFiB,aASlB,C,sEAyCD,kCAAgCqC,QAAhC,CAA0ClC,QAA1C,CAAoD,CAClD,GAAImC,CAAAA,KAAK,CAAInC,QAAQ,CAACf,YAAT,GAA0B,cAA3B,EAA8Ce,QAAQ,CAACtB,iBAAT,GAA+BwD,QAAQ,CAACxD,iBAAlG,CACA,GAAIyD,KAAJ,CAAW,CACT,MAAO,CAAElD,YAAY,CAAE,kBAAhB,CAAoCP,iBAAiB,CAAEwD,QAAQ,CAACxD,iBAAhE,CAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,C,0BA1DwBb,S,EAsJ3B,cAAeQ,CAAAA,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport './assets/Conversation.css';\nimport Dropzone from 'react-dropzone';\nimport styles from './assets/Conversation.module.css'\nimport {Button, Form, Icon, Input} from \"antd\";\nimport ConversationsMessages from \"./ConversationsMessages\";\nimport PropTypes from \"prop-types\";\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        newMessage: '',\n        conversationProxy: props.conversationProxy,\n        messages: [],\n        loadingState: 'initializing',\n        boundConversations: new Set()\n    };\n  }\n\n  loadMessagesFor = (thisConversation) => {\n    if (this.state.conversationProxy === thisConversation) {\n        thisConversation.getMessages()\n            .then(messagePaginator => {\n                if (this.state.conversationProxy === thisConversation) {\n                    this.setState({ messages: messagePaginator.items, loadingState: 'ready' });\n                }\n            })\n            .catch(err => {\n                console.error(\"Couldn't fetch messages IMPLEMENT RETRY\", err);\n                this.setState({ loadingState: \"failed\" });\n            });\n    }\n  };\n\n  componentDidMount = () => {\n      if (this.state.conversationProxy) {\n        this.loadMessagesFor(this.state.conversationProxy);\n\n        if (!this.state.boundConversations.has(this.state.conversationProxy)) {\n            let newConversation = this.state.conversationProxy;\n            newConversation.on('messageAdded', m => this.messageAdded(m, newConversation));\n            this.setState({boundConversations: new Set([...this.state.boundConversations, newConversation])});\n        }\n      }\n  }\n\n  componentDidUpdate = (oldProps, oldState) => {\n    if (this.state.conversationProxy !== oldState.conversationProxy) {\n        this.loadMessagesFor(this.state.conversationProxy);\n\n        if (!this.state.boundConversations.has(this.state.conversationProxy)) {\n            let newConversation = this.state.conversationProxy;\n            newConversation.on('messageAdded', m => this.messageAdded(m, newConversation));\n            this.setState({boundConversations: new Set([...this.state.boundConversations, newConversation])});\n        }\n    }\n  };\n\n  static getDerivedStateFromProps(newProps, oldState) {\n    let logic = (oldState.loadingState === 'initializing') || oldState.conversationProxy !== newProps.conversationProxy;\n    if (logic) {\n      return { loadingState: 'loading messages', conversationProxy: newProps.conversationProxy };\n    } else {\n      return null;\n    }\n  }\n\n  messageAdded = (message, targetConversation) => {\n    if (targetConversation === this.state.conversationProxy)\n        this.setState((prevState, props) => ({\n            messages: [...prevState.messages, message]\n        }));\n  };\n\n  onMessageChanged = event => {\n    this.setState({ newMessage: event.target.value });\n  };\n\n  sendMessage = event => {\n    event.preventDefault();\n    const message = this.state.newMessage;\n    this.setState({ newMessage: '' });\n    this.state.conversationProxy.sendMessage(message);\n  };\n\n  onDrop = acceptedFiles => {\n    this.state.conversationProxy.sendMessage({contentType: acceptedFiles[0].type, media: acceptedFiles[0]});\n  };\n\n  render = () => {\n    return (\n        <Dropzone\n            onDrop={this.onDrop}\n            accept=\"image/*\">\n              \n          {({getRootProps, getInputProps, isDragActive}) => (\n              <div\n                  {...getRootProps()}\n                  onClick={() => {\n                  }}\n                  id=\"OpenChannel\"\n                  style={{position: \"relative\", top: 0}}>\n\n                {isDragActive &&\n                <div className={styles.drop}>\n                  <Icon type={\"cloud-upload\"}\n                        style={{fontSize: \"5em\", color: \"#fefefe\"}}/>\n                  <h3 style={{color: \"#fefefe\"}}>Release to Upload</h3>\n                </div>\n                }\n                <div\n                    className={styles.messages}\n                    style={{\n                      filter: `blur(${isDragActive ? 4 : 0}px)`,\n                    }}\n                >\n                  <input id=\"files\" {...getInputProps()} />\n                  <div style={{flexBasis: \"100%\", flexGrow: 2, flexShrink: 1, overflowY: \"scroll\"}}>\n                    <ConversationsMessages\n                        identity={this.props.myIdentity}\n                        messages={this.state.messages}/>\n                  </div>\n                  <div>\n                    <Form onSubmit={this.sendMessage}>\n                      <Input.Group compact={true} style={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"row\"\n                      }}>\n                        <Input\n                            style={{flexBasis: \"100%\"}}\n                            placeholder={\"Type your message here...\"}\n                            type={\"text\"}\n                            name={\"message\"}\n                            id={styles['type-a-message']}\n                            autoComplete={\"off\"}\n                            disabled={this.state.loadingState !== 'ready'}\n                            onChange={this.onMessageChanged}\n                            value={this.state.newMessage}\n                        />\n                        <Button icon=\"enter\" htmlType=\"submit\" type={\"submit\"}/>\n                      </Input.Group>\n                    </Form>\n                  </div>\n                </div>\n              </div>\n          )}\n\n        </Dropzone>\n    );\n  }\n}\n\nConversation.propTypes = {\n  myIdentity: PropTypes.string.isRequired\n};\n\nexport default Conversation;"]},"metadata":{},"sourceType":"module"}