{"ast":null,"code":"var _classCallCheck = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var XMLCharacterData, XMLNode;\n  XMLNode = require('./XMLNode'); // Represents a character data node\n\n  module.exports = XMLCharacterData = function () {\n    var XMLCharacterData = /*#__PURE__*/function (_XMLNode) {\n      \"use strict\";\n\n      _inherits(XMLCharacterData, _XMLNode);\n\n      var _super = _createSuper(XMLCharacterData);\n\n      // Initializes a new instance of `XMLCharacterData`\n      function XMLCharacterData(parent) {\n        var _this;\n\n        _classCallCheck(this, XMLCharacterData);\n\n        _this = _super.call(this, parent);\n        _this.value = '';\n        return _this;\n      } // Creates and returns a deep clone of `this`\n\n\n      _createClass(XMLCharacterData, [{\n        key: \"clone\",\n        value: function clone() {\n          return Object.create(this);\n        } // DOM level 1 functions to be implemented later\n\n      }, {\n        key: \"substringData\",\n        value: function substringData(offset, count) {\n          throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n        }\n      }, {\n        key: \"appendData\",\n        value: function appendData(arg) {\n          throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n        }\n      }, {\n        key: \"insertData\",\n        value: function insertData(offset, arg) {\n          throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n        }\n      }, {\n        key: \"deleteData\",\n        value: function deleteData(offset, count) {\n          throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n        }\n      }, {\n        key: \"replaceData\",\n        value: function replaceData(offset, count, arg) {\n          throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n        }\n      }, {\n        key: \"isEqualNode\",\n        value: function isEqualNode(node) {\n          if (!_get(_getPrototypeOf(XMLCharacterData.prototype), \"isEqualNode\", this).call(this, node)) {\n            return false;\n          }\n\n          if (node.data !== this.data) {\n            return false;\n          }\n\n          return true;\n        }\n      }]);\n\n      return XMLCharacterData;\n    }(XMLNode);\n\n    ; // DOM level 1\n\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(value) {\n        return this.value = value || '';\n      }\n    });\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function get() {\n        return this.value.length;\n      }\n    }); // DOM level 3\n\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(value) {\n        return this.value = value || '';\n      }\n    });\n    return XMLCharacterData;\n  }.call(this);\n}).call(this);","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/xmlbuilder/lib/XMLCharacterData.js"],"names":["XMLCharacterData","XMLNode","require","module","exports","parent","value","Object","create","offset","count","Error","debugInfo","arg","node","data","defineProperty","prototype","get","set","length","call"],"mappings":";;;;;;;;;;;;AAAA;AACA,CAAC,YAAW;AACV,MAAIA,gBAAJ,EAAsBC,OAAtB;AAEAA,EAAAA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAjB,CAHU,CAKV;;AACAC,EAAAA,MAAM,CAACC,OAAP,GAAiBJ,gBAAgB,GAAI,YAAW;AAAA,QACxCA,gBADwC;AAAA;;AAAA;;AAAA;;AAE5C;AAEA,gCAAYK,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,kCAAMA,MAAN;AACA,cAAKC,KAAL,GAAa,EAAb;AAFkB;AAGnB,OAP2C,CAU5C;;;AAV4C;AAAA;AAAA,eAW5C,iBAAQ;AACN,iBAAOC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAP;AACD,SAb2C,CAe5C;;AAf4C;AAAA;AAAA,eAgB5C,uBAAcC,MAAd,EAAsBC,KAAtB,EAA6B;AAC3B,gBAAM,IAAIC,KAAJ,CAAU,wCAAwC,KAAKC,SAAL,EAAlD,CAAN;AACD;AAlB2C;AAAA;AAAA,eAoB5C,oBAAWC,GAAX,EAAgB;AACd,gBAAM,IAAIF,KAAJ,CAAU,wCAAwC,KAAKC,SAAL,EAAlD,CAAN;AACD;AAtB2C;AAAA;AAAA,eAwB5C,oBAAWH,MAAX,EAAmBI,GAAnB,EAAwB;AACtB,gBAAM,IAAIF,KAAJ,CAAU,wCAAwC,KAAKC,SAAL,EAAlD,CAAN;AACD;AA1B2C;AAAA;AAAA,eA4B5C,oBAAWH,MAAX,EAAmBC,KAAnB,EAA0B;AACxB,gBAAM,IAAIC,KAAJ,CAAU,wCAAwC,KAAKC,SAAL,EAAlD,CAAN;AACD;AA9B2C;AAAA;AAAA,eAgC5C,qBAAYH,MAAZ,EAAoBC,KAApB,EAA2BG,GAA3B,EAAgC;AAC9B,gBAAM,IAAIF,KAAJ,CAAU,wCAAwC,KAAKC,SAAL,EAAlD,CAAN;AACD;AAlC2C;AAAA;AAAA,eAoC5C,qBAAYE,IAAZ,EAAkB;AAChB,cAAI,mFAAmBA,IAAnB,CAAJ,EAA8B;AAC5B,mBAAO,KAAP;AACD;;AACD,cAAIA,IAAI,CAACC,IAAL,KAAc,KAAKA,IAAvB,EAA6B;AAC3B,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;AA5C2C;;AAAA;AAAA,MACfd,OADe;;AA8C7C,KA9C6C,CAgD9C;;AACAM,IAAAA,MAAM,CAACS,cAAP,CAAsBhB,gBAAgB,CAACiB,SAAvC,EAAkD,MAAlD,EAA0D;AACxDC,MAAAA,GAAG,EAAE,eAAW;AACd,eAAO,KAAKZ,KAAZ;AACD,OAHuD;AAIxDa,MAAAA,GAAG,EAAE,aAASb,KAAT,EAAgB;AACnB,eAAO,KAAKA,KAAL,GAAaA,KAAK,IAAI,EAA7B;AACD;AANuD,KAA1D;AASAC,IAAAA,MAAM,CAACS,cAAP,CAAsBhB,gBAAgB,CAACiB,SAAvC,EAAkD,QAAlD,EAA4D;AAC1DC,MAAAA,GAAG,EAAE,eAAW;AACd,eAAO,KAAKZ,KAAL,CAAWc,MAAlB;AACD;AAHyD,KAA5D,EA1D8C,CAgE9C;;AACAb,IAAAA,MAAM,CAACS,cAAP,CAAsBhB,gBAAgB,CAACiB,SAAvC,EAAkD,aAAlD,EAAiE;AAC/DC,MAAAA,GAAG,EAAE,eAAW;AACd,eAAO,KAAKZ,KAAZ;AACD,OAH8D;AAI/Da,MAAAA,GAAG,EAAE,aAASb,KAAT,EAAgB;AACnB,eAAO,KAAKA,KAAL,GAAaA,KAAK,IAAI,EAA7B;AACD;AAN8D,KAAjE;AASA,WAAON,gBAAP;AAED,GA5EmC,CA4EjCqB,IA5EiC,CA4E5B,IA5E4B,CAApC;AA8ED,CApFD,EAoFGA,IApFH,CAoFQ,IApFR","sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLCharacterData, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  // Represents a character data node\n  module.exports = XMLCharacterData = (function() {\n    class XMLCharacterData extends XMLNode {\n      // Initializes a new instance of `XMLCharacterData`\n\n      constructor(parent) {\n        super(parent);\n        this.value = '';\n      }\n\n      \n      // Creates and returns a deep clone of `this`\n      clone() {\n        return Object.create(this);\n      }\n\n      // DOM level 1 functions to be implemented later\n      substringData(offset, count) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      appendData(arg) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      insertData(offset, arg) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      deleteData(offset, count) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      replaceData(offset, count, arg) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      isEqualNode(node) {\n        if (!super.isEqualNode(node)) {\n          return false;\n        }\n        if (node.data !== this.data) {\n          return false;\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    return XMLCharacterData;\n\n  }).call(this);\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}