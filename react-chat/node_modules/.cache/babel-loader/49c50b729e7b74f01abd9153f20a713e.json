{"ast":null,"code":"\"use strict\";\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _set = require(\"babel-runtime/core-js/set\");\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Conversations = exports.Conversation = void 0;\n\nvar events_1 = require(\"events\");\n\nvar logger_1 = require(\"../logger\");\n\nvar conversation_1 = require(\"../conversation\");\n\nObject.defineProperty(exports, \"Conversation\", {\n  enumerable: true,\n  get: function get() {\n    return conversation_1.Conversation;\n  }\n});\n\nvar deferred_1 = require(\"../util/deferred\");\n\nvar util_1 = require(\"../util\");\n\nvar log = logger_1.Logger.scope('Conversations');\n/**\n * Represents conversations collection\n * {@see Conversation}\n */\n\nvar Conversations = function (_events_1$EventEmitte) {\n  (0, _inherits3.default)(Conversations, _events_1$EventEmitte);\n\n  function Conversations(services) {\n    (0, _classCallCheck3.default)(this, Conversations);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Conversations.__proto__ || (0, _getPrototypeOf2.default)(Conversations)).call(this));\n\n    _this.services = services;\n    _this.conversations = new _map2.default();\n    _this.thumbstones = new _set2.default();\n    _this.syncListFetched = false;\n    _this.syncListRead = new deferred_1.Deferred();\n    return _this;\n  }\n\n  (0, _createClass3.default)(Conversations, [{\n    key: \"getMap\",\n    value: function getMap() {\n      var _this2 = this;\n\n      return this.services.session.getMyConversationsId().then(function (name) {\n        return _this2.services.syncClient.map({\n          id: name,\n          mode: 'open_existing'\n        });\n      });\n    }\n    /**\n     * Add conversation to server\n     * @private\n     * @returns {Promise<Conversation>} Conversation\n     */\n\n  }, {\n    key: \"addConversation\",\n    value: function () {\n      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(options) {\n        var attributes, response, conversationSid, conversationDocument, existingConversation, conversation;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                attributes = void 0;\n\n                if (typeof options.attributes === 'undefined') {\n                  attributes = {};\n                } else {\n                  attributes = options.attributes;\n                }\n\n                _context.next = 4;\n                return this.services.session.addCommand('createConversation', {\n                  friendlyName: options.friendlyName,\n                  //uniqueName: options.uniqueName,\n                  //type: 'private',\n                  attributes: (0, _stringify2.default)(attributes)\n                });\n\n              case 4:\n                response = _context.sent;\n                conversationSid = 'conversationSid' in response ? response['conversationSid'] : null;\n                conversationDocument = 'conversation' in response ? response['conversation'] : null;\n                existingConversation = this.conversations.get(conversationSid);\n\n                if (!existingConversation) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 11;\n                return existingConversation._subscribe();\n\n              case 11:\n                return _context.abrupt(\"return\", existingConversation);\n\n              case 12:\n                conversation = new conversation_1.Conversation(this.services, {\n                  channel: conversationDocument,\n                  entityName: null,\n                  // uniqueName: null,\n                  attributes: null,\n                  createdBy: null,\n                  friendlyName: null,\n                  lastConsumedMessageIndex: null,\n                  // type: options.isPrivate ? 'private' : 'public',\n                  dateCreated: null,\n                  dateUpdated: null\n                }, conversationSid);\n                this.conversations.set(conversation.sid, conversation);\n                this.registerForEvents(conversation);\n                _context.next = 17;\n                return conversation._subscribe();\n\n              case 17:\n                this.emit('conversationAdded', conversation);\n                return _context.abrupt(\"return\", conversation);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addConversation(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return addConversation;\n    }()\n    /**\n     * Fetch conversations list and instantiate all necessary objects\n     */\n\n  }, {\n    key: \"fetchConversations\",\n    value: function fetchConversations() {\n      var _this3 = this;\n\n      this.getMap().then(function () {\n        var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(map) {\n          var upserts, paginator, items;\n          return _regenerator2.default.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  map.on('itemAdded', function (args) {\n                    log.debug('itemAdded: ' + args.item.key);\n\n                    _this3.upsertConversation('sync', args.item.key, args.item.value);\n                  });\n                  map.on('itemRemoved', function (args) {\n                    log.debug('itemRemoved: ' + args.key);\n                    var sid = args.key;\n\n                    if (!_this3.syncListFetched) {\n                      _this3.thumbstones.add(sid);\n                    }\n\n                    var conversation = _this3.conversations.get(sid);\n\n                    if (conversation) {\n                      if (conversation && conversation.status === 'joined'\n                      /*|| conversation.status === 'invited'*/\n                      ) {\n                          conversation._setStatus('notParticipating', 'sync');\n\n                          _this3.emit('conversationLeft', conversation);\n                        }\n\n                      _this3.conversations.delete(sid);\n\n                      _this3.emit('conversationRemoved', conversation);\n\n                      conversation.emit('removed', conversation);\n                    }\n                  });\n                  map.on('itemUpdated', function (args) {\n                    log.debug('itemUpdated: ' + args.item.key);\n\n                    _this3.upsertConversation('sync', args.item.key, args.item.value);\n                  });\n                  upserts = [];\n                  _context2.next = 6;\n                  return _this3.services.syncList.getPage();\n\n                case 6:\n                  paginator = _context2.sent;\n                  items = paginator.items;\n                  items.forEach(function (item) {\n                    upserts.push(_this3.upsertConversation('synclist', item.channel_sid, item));\n                  });\n\n                case 9:\n                  if (!paginator.hasNextPage) {\n                    _context2.next = 16;\n                    break;\n                  }\n\n                  _context2.next = 12;\n                  return paginator.nextPage();\n\n                case 12:\n                  paginator = _context2.sent;\n                  paginator.items.forEach(function (item) {\n                    upserts.push(_this3.upsertConversation('synclist', item.channel_sid, item));\n                  });\n                  _context2.next = 9;\n                  break;\n\n                case 16:\n                  _this3.syncListRead.set(true);\n\n                  return _context2.abrupt(\"return\", _promise2.default.all(upserts));\n\n                case 18:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, _this3);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).then(function () {\n        _this3.syncListFetched = true;\n\n        _this3.thumbstones.clear();\n\n        log.debug('Conversations list fetched');\n      }).then(function () {\n        return _this3;\n      }).catch(function (e) {\n        if (_this3.services.syncClient.connectionState != 'disconnected') {\n          log.error('Failed to get conversations list', e);\n        }\n\n        log.debug('ERROR: Failed to get conversations list', e);\n        throw e;\n      });\n    }\n  }, {\n    key: \"_wrapPaginator\",\n    value: function _wrapPaginator(page, op) {\n      var _this4 = this;\n\n      return op(page.items).then(function (items) {\n        return {\n          items: items,\n          hasNextPage: page.hasNextPage,\n          hasPrevPage: page.hasPrevPage,\n          nextPage: function nextPage() {\n            return page.nextPage().then(function (x) {\n              return _this4._wrapPaginator(x, op);\n            });\n          },\n          prevPage: function prevPage() {\n            return page.prevPage().then(function (x) {\n              return _this4._wrapPaginator(x, op);\n            });\n          }\n        };\n      });\n    }\n  }, {\n    key: \"getConversations\",\n    value: function getConversations(args) {\n      var _this5 = this;\n\n      return this.getMap().then(function (conversationsMap) {\n        return conversationsMap.getItems(args);\n      }).then(function (page) {\n        return _this5._wrapPaginator(page, function (items) {\n          return _promise2.default.all(items.map(function (item) {\n            return _this5.upsertConversation('sync', item.key, item.value);\n          }));\n        });\n      });\n    }\n  }, {\n    key: \"getConversation\",\n    value: function getConversation(sid) {\n      var _this6 = this;\n\n      return this.getMap().then(function (conversationsMap) {\n        return conversationsMap.getItems({\n          key: sid\n        });\n      }).then(function (page) {\n        return page.items.map(function (item) {\n          return _this6.upsertConversation('sync', item.key, item.value);\n        });\n      }).then(function (items) {\n        return items.length > 0 ? items[0] : null;\n      });\n    }\n  }, {\n    key: \"upsertConversation\",\n    value: function upsertConversation(source, sid, data) {\n      var _this7 = this;\n\n      log.trace('upsertConversation(sid=' + sid + ', data=', data);\n      var conversation = this.conversations.get(sid); // Update the Conversation's status if we know about it\n\n      if (conversation) {\n        log.trace('upsertConversation: conversation ' + sid + ' is known and it\\'s' + ' status is known from source ' + conversation._statusSource() + ' and update came from source ' + source, conversation);\n\n        if (typeof conversation._statusSource() === 'undefined' || source === conversation._statusSource() || source === 'synclist' && conversation._statusSource() !== 'sync' || source === 'sync') {\n          if (data.status === 'joined' && conversation.status !== 'joined') {\n            conversation._setStatus('joined', source);\n\n            var updateData = {};\n\n            if (typeof data.notificationLevel !== 'undefined') {\n              updateData.notificationLevel = data.notificationLevel;\n            }\n\n            if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n              updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n            }\n\n            if (!util_1.isDeepEqual(updateData, {})) {\n              conversation._update(updateData);\n            }\n\n            conversation._subscribe().then(function () {\n              _this7.emit('conversationJoined', conversation);\n            }); // } else if (data.status === 'invited' && conversation.status !== 'invited') {\n            //   conversation._setStatus('invited', source);\n            //\n            //   let updateData: any = {};\n            //\n            //   if (typeof data.notificationLevel !== 'undefined') {\n            //     updateData.notificationLevel = data.notificationLevel;\n            //   }\n            //\n            //   if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n            //     updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n            //   }\n            //\n            //   if (!isDeepEqual(updateData, {})) {\n            //     conversation._update(updateData);\n            //   }\n            //\n            //   conversation._subscribe().then(() => { this.emit('channelInvited', conversation); });\n\n          } else if (data.status === 'notParticipating' && conversation.status === 'joined') {\n            conversation._setStatus('notParticipating', source);\n\n            conversation._update(data);\n\n            conversation._subscribe().then(function () {\n              _this7.emit('conversationLeft', conversation);\n            });\n          } else if (data.status === 'notParticipating') {\n            conversation._subscribe();\n          } else {\n            conversation._update(data);\n          }\n        } else {\n          log.trace('upsertConversation: conversation is known from sync and came from chat, ignoring', {\n            sid: sid,\n            data: data.status,\n            conversation: conversation.status\n          });\n        }\n\n        return conversation._subscribe().then(function () {\n          return conversation;\n        });\n      }\n\n      if ((source === 'chat' || source === 'synclist') && this.thumbstones.has(sid)) {\n        // if conversation was deleted, we ignore it\n        log.trace('upsertConversation: conversation is deleted and came again from chat, ignoring', sid);\n        return;\n      } // Fetch the Conversation if we don't know about it\n\n\n      log.trace('upsertConversation: creating local conversation object with sid ' + sid, data);\n      conversation = new conversation_1.Conversation(this.services, data, sid);\n      this.conversations.set(sid, conversation);\n      return conversation._subscribe().then(function () {\n        _this7.registerForEvents(conversation);\n\n        _this7.emit('conversationAdded', conversation);\n\n        if (data.status === 'joined') {\n          conversation._setStatus('joined', source);\n\n          _this7.emit('conversationJoined', conversation); // } else if (data.status === 'invited') {\n          //   conversation._setStatus('invited', source);\n          //   this.emit('channelInvited', conversation);\n\n        }\n\n        return conversation;\n      });\n    }\n  }, {\n    key: \"onConversationRemoved\",\n    value: function onConversationRemoved(sid) {\n      var conversation = this.conversations.get(sid);\n\n      if (conversation) {\n        this.conversations.delete(sid);\n        this.emit('conversationRemoved', conversation);\n      }\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(conversation) {\n      var _this8 = this;\n\n      conversation.on('removed', function () {\n        return _this8.onConversationRemoved(conversation.sid);\n      });\n      conversation.on('updated', function (args) {\n        return _this8.emit('conversationUpdated', args);\n      });\n      conversation.on('participantJoined', this.emit.bind(this, 'participantJoined'));\n      conversation.on('participantLeft', this.emit.bind(this, 'participantLeft'));\n      conversation.on('participantUpdated', function (args) {\n        return _this8.emit('participantUpdated', args);\n      });\n      conversation.on('messageAdded', this.emit.bind(this, 'messageAdded'));\n      conversation.on('messageUpdated', function (args) {\n        return _this8.emit('messageUpdated', args);\n      });\n      conversation.on('messageRemoved', this.emit.bind(this, 'messageRemoved'));\n      conversation.on('typingStarted', this.emit.bind(this, 'typingStarted'));\n      conversation.on('typingEnded', this.emit.bind(this, 'typingEnded'));\n    }\n  }]);\n  return Conversations;\n}(events_1.EventEmitter);\n\nexports.Conversations = Conversations;","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/@twilio/conversations/browser/data/conversations.js"],"names":["_promise","require","_promise2","_interopRequireDefault","_regenerator","_regenerator2","_stringify","_stringify2","_asyncToGenerator2","_asyncToGenerator3","_set","_set2","_map","_map2","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","obj","__esModule","default","Object","defineProperty","exports","value","Conversations","Conversation","events_1","logger_1","conversation_1","enumerable","get","deferred_1","util_1","log","Logger","scope","_events_1$EventEmitte","services","_this","__proto__","call","conversations","thumbstones","syncListFetched","syncListRead","Deferred","key","getMap","_this2","session","getMyConversationsId","then","name","syncClient","map","id","mode","_ref","mark","_callee","options","attributes","response","conversationSid","conversationDocument","existingConversation","conversation","wrap","_callee$","_context","prev","next","addCommand","friendlyName","sent","_subscribe","abrupt","channel","entityName","createdBy","lastConsumedMessageIndex","dateCreated","dateUpdated","set","sid","registerForEvents","emit","stop","addConversation","_x","apply","arguments","fetchConversations","_this3","_ref2","_callee2","upserts","paginator","items","_callee2$","_context2","on","args","debug","item","upsertConversation","add","status","_setStatus","delete","syncList","getPage","forEach","push","channel_sid","hasNextPage","nextPage","all","_x2","clear","catch","e","connectionState","error","_wrapPaginator","page","op","_this4","hasPrevPage","x","prevPage","getConversations","_this5","conversationsMap","getItems","getConversation","_this6","length","source","data","_this7","trace","_statusSource","updateData","notificationLevel","isDeepEqual","_update","has","onConversationRemoved","_this8","bind","EventEmitter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _set = require(\"babel-runtime/core-js/set\");\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Conversations = exports.Conversation = void 0;\nvar events_1 = require(\"events\");\nvar logger_1 = require(\"../logger\");\nvar conversation_1 = require(\"../conversation\");\nObject.defineProperty(exports, \"Conversation\", { enumerable: true, get: function get() {\n        return conversation_1.Conversation;\n    } });\nvar deferred_1 = require(\"../util/deferred\");\nvar util_1 = require(\"../util\");\nvar log = logger_1.Logger.scope('Conversations');\n/**\n * Represents conversations collection\n * {@see Conversation}\n */\n\nvar Conversations = function (_events_1$EventEmitte) {\n    (0, _inherits3.default)(Conversations, _events_1$EventEmitte);\n\n    function Conversations(services) {\n        (0, _classCallCheck3.default)(this, Conversations);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Conversations.__proto__ || (0, _getPrototypeOf2.default)(Conversations)).call(this));\n\n        _this.services = services;\n        _this.conversations = new _map2.default();\n        _this.thumbstones = new _set2.default();\n        _this.syncListFetched = false;\n        _this.syncListRead = new deferred_1.Deferred();\n        return _this;\n    }\n\n    (0, _createClass3.default)(Conversations, [{\n        key: \"getMap\",\n        value: function getMap() {\n            var _this2 = this;\n\n            return this.services.session.getMyConversationsId().then(function (name) {\n                return _this2.services.syncClient.map({ id: name, mode: 'open_existing' });\n            });\n        }\n        /**\n         * Add conversation to server\n         * @private\n         * @returns {Promise<Conversation>} Conversation\n         */\n\n    }, {\n        key: \"addConversation\",\n        value: function () {\n            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(options) {\n                var attributes, response, conversationSid, conversationDocument, existingConversation, conversation;\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                attributes = void 0;\n\n                                if (typeof options.attributes === 'undefined') {\n                                    attributes = {};\n                                } else {\n                                    attributes = options.attributes;\n                                }\n                                _context.next = 4;\n                                return this.services.session.addCommand('createConversation', {\n                                    friendlyName: options.friendlyName,\n                                    //uniqueName: options.uniqueName,\n                                    //type: 'private',\n                                    attributes: (0, _stringify2.default)(attributes)\n                                });\n\n                            case 4:\n                                response = _context.sent;\n                                conversationSid = 'conversationSid' in response ? response['conversationSid'] : null;\n                                conversationDocument = 'conversation' in response ? response['conversation'] : null;\n                                existingConversation = this.conversations.get(conversationSid);\n\n                                if (!existingConversation) {\n                                    _context.next = 12;\n                                    break;\n                                }\n\n                                _context.next = 11;\n                                return existingConversation._subscribe();\n\n                            case 11:\n                                return _context.abrupt(\"return\", existingConversation);\n\n                            case 12:\n                                conversation = new conversation_1.Conversation(this.services, {\n                                    channel: conversationDocument,\n                                    entityName: null,\n                                    // uniqueName: null,\n                                    attributes: null,\n                                    createdBy: null,\n                                    friendlyName: null,\n                                    lastConsumedMessageIndex: null,\n                                    // type: options.isPrivate ? 'private' : 'public',\n                                    dateCreated: null,\n                                    dateUpdated: null\n                                }, conversationSid);\n\n                                this.conversations.set(conversation.sid, conversation);\n                                this.registerForEvents(conversation);\n                                _context.next = 17;\n                                return conversation._subscribe();\n\n                            case 17:\n                                this.emit('conversationAdded', conversation);\n                                return _context.abrupt(\"return\", conversation);\n\n                            case 19:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function addConversation(_x) {\n                return _ref.apply(this, arguments);\n            }\n\n            return addConversation;\n        }()\n        /**\n         * Fetch conversations list and instantiate all necessary objects\n         */\n\n    }, {\n        key: \"fetchConversations\",\n        value: function fetchConversations() {\n            var _this3 = this;\n\n            this.getMap().then(function () {\n                var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(map) {\n                    var upserts, paginator, items;\n                    return _regenerator2.default.wrap(function _callee2$(_context2) {\n                        while (1) {\n                            switch (_context2.prev = _context2.next) {\n                                case 0:\n                                    map.on('itemAdded', function (args) {\n                                        log.debug('itemAdded: ' + args.item.key);\n                                        _this3.upsertConversation('sync', args.item.key, args.item.value);\n                                    });\n                                    map.on('itemRemoved', function (args) {\n                                        log.debug('itemRemoved: ' + args.key);\n                                        var sid = args.key;\n                                        if (!_this3.syncListFetched) {\n                                            _this3.thumbstones.add(sid);\n                                        }\n                                        var conversation = _this3.conversations.get(sid);\n                                        if (conversation) {\n                                            if (conversation && conversation.status === 'joined' /*|| conversation.status === 'invited'*/) {\n                                                    conversation._setStatus('notParticipating', 'sync');\n                                                    _this3.emit('conversationLeft', conversation);\n                                                }\n                                            _this3.conversations.delete(sid);\n                                            _this3.emit('conversationRemoved', conversation);\n                                            conversation.emit('removed', conversation);\n                                        }\n                                    });\n                                    map.on('itemUpdated', function (args) {\n                                        log.debug('itemUpdated: ' + args.item.key);\n                                        _this3.upsertConversation('sync', args.item.key, args.item.value);\n                                    });\n                                    upserts = [];\n                                    _context2.next = 6;\n                                    return _this3.services.syncList.getPage();\n\n                                case 6:\n                                    paginator = _context2.sent;\n                                    items = paginator.items;\n\n                                    items.forEach(function (item) {\n                                        upserts.push(_this3.upsertConversation('synclist', item.channel_sid, item));\n                                    });\n\n                                case 9:\n                                    if (!paginator.hasNextPage) {\n                                        _context2.next = 16;\n                                        break;\n                                    }\n\n                                    _context2.next = 12;\n                                    return paginator.nextPage();\n\n                                case 12:\n                                    paginator = _context2.sent;\n\n                                    paginator.items.forEach(function (item) {\n                                        upserts.push(_this3.upsertConversation('synclist', item.channel_sid, item));\n                                    });\n                                    _context2.next = 9;\n                                    break;\n\n                                case 16:\n                                    _this3.syncListRead.set(true);\n                                    return _context2.abrupt(\"return\", _promise2.default.all(upserts));\n\n                                case 18:\n                                case \"end\":\n                                    return _context2.stop();\n                            }\n                        }\n                    }, _callee2, _this3);\n                }));\n\n                return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                };\n            }()).then(function () {\n                _this3.syncListFetched = true;\n                _this3.thumbstones.clear();\n                log.debug('Conversations list fetched');\n            }).then(function () {\n                return _this3;\n            }).catch(function (e) {\n                if (_this3.services.syncClient.connectionState != 'disconnected') {\n                    log.error('Failed to get conversations list', e);\n                }\n                log.debug('ERROR: Failed to get conversations list', e);\n                throw e;\n            });\n        }\n    }, {\n        key: \"_wrapPaginator\",\n        value: function _wrapPaginator(page, op) {\n            var _this4 = this;\n\n            return op(page.items).then(function (items) {\n                return {\n                    items: items,\n                    hasNextPage: page.hasNextPage,\n                    hasPrevPage: page.hasPrevPage,\n                    nextPage: function nextPage() {\n                        return page.nextPage().then(function (x) {\n                            return _this4._wrapPaginator(x, op);\n                        });\n                    },\n                    prevPage: function prevPage() {\n                        return page.prevPage().then(function (x) {\n                            return _this4._wrapPaginator(x, op);\n                        });\n                    }\n                };\n            });\n        }\n    }, {\n        key: \"getConversations\",\n        value: function getConversations(args) {\n            var _this5 = this;\n\n            return this.getMap().then(function (conversationsMap) {\n                return conversationsMap.getItems(args);\n            }).then(function (page) {\n                return _this5._wrapPaginator(page, function (items) {\n                    return _promise2.default.all(items.map(function (item) {\n                        return _this5.upsertConversation('sync', item.key, item.value);\n                    }));\n                });\n            });\n        }\n    }, {\n        key: \"getConversation\",\n        value: function getConversation(sid) {\n            var _this6 = this;\n\n            return this.getMap().then(function (conversationsMap) {\n                return conversationsMap.getItems({ key: sid });\n            }).then(function (page) {\n                return page.items.map(function (item) {\n                    return _this6.upsertConversation('sync', item.key, item.value);\n                });\n            }).then(function (items) {\n                return items.length > 0 ? items[0] : null;\n            });\n        }\n    }, {\n        key: \"upsertConversation\",\n        value: function upsertConversation(source, sid, data) {\n            var _this7 = this;\n\n            log.trace('upsertConversation(sid=' + sid + ', data=', data);\n            var conversation = this.conversations.get(sid);\n            // Update the Conversation's status if we know about it\n            if (conversation) {\n                log.trace('upsertConversation: conversation ' + sid + ' is known and it\\'s' + ' status is known from source ' + conversation._statusSource() + ' and update came from source ' + source, conversation);\n                if (typeof conversation._statusSource() === 'undefined' || source === conversation._statusSource() || source === 'synclist' && conversation._statusSource() !== 'sync' || source === 'sync') {\n                    if (data.status === 'joined' && conversation.status !== 'joined') {\n                        conversation._setStatus('joined', source);\n                        var updateData = {};\n                        if (typeof data.notificationLevel !== 'undefined') {\n                            updateData.notificationLevel = data.notificationLevel;\n                        }\n                        if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n                            updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n                        }\n                        if (!util_1.isDeepEqual(updateData, {})) {\n                            conversation._update(updateData);\n                        }\n                        conversation._subscribe().then(function () {\n                            _this7.emit('conversationJoined', conversation);\n                        });\n                        // } else if (data.status === 'invited' && conversation.status !== 'invited') {\n                        //   conversation._setStatus('invited', source);\n                        //\n                        //   let updateData: any = {};\n                        //\n                        //   if (typeof data.notificationLevel !== 'undefined') {\n                        //     updateData.notificationLevel = data.notificationLevel;\n                        //   }\n                        //\n                        //   if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n                        //     updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n                        //   }\n                        //\n                        //   if (!isDeepEqual(updateData, {})) {\n                        //     conversation._update(updateData);\n                        //   }\n                        //\n                        //   conversation._subscribe().then(() => { this.emit('channelInvited', conversation); });\n                    } else if (data.status === 'notParticipating' && conversation.status === 'joined') {\n                        conversation._setStatus('notParticipating', source);\n                        conversation._update(data);\n                        conversation._subscribe().then(function () {\n                            _this7.emit('conversationLeft', conversation);\n                        });\n                    } else if (data.status === 'notParticipating') {\n                        conversation._subscribe();\n                    } else {\n                        conversation._update(data);\n                    }\n                } else {\n                    log.trace('upsertConversation: conversation is known from sync and came from chat, ignoring', {\n                        sid: sid,\n                        data: data.status,\n                        conversation: conversation.status\n                    });\n                }\n                return conversation._subscribe().then(function () {\n                    return conversation;\n                });\n            }\n            if ((source === 'chat' || source === 'synclist') && this.thumbstones.has(sid)) {\n                // if conversation was deleted, we ignore it\n                log.trace('upsertConversation: conversation is deleted and came again from chat, ignoring', sid);\n                return;\n            }\n            // Fetch the Conversation if we don't know about it\n            log.trace('upsertConversation: creating local conversation object with sid ' + sid, data);\n            conversation = new conversation_1.Conversation(this.services, data, sid);\n            this.conversations.set(sid, conversation);\n            return conversation._subscribe().then(function () {\n                _this7.registerForEvents(conversation);\n                _this7.emit('conversationAdded', conversation);\n                if (data.status === 'joined') {\n                    conversation._setStatus('joined', source);\n                    _this7.emit('conversationJoined', conversation);\n                    // } else if (data.status === 'invited') {\n                    //   conversation._setStatus('invited', source);\n                    //   this.emit('channelInvited', conversation);\n                }\n                return conversation;\n            });\n        }\n    }, {\n        key: \"onConversationRemoved\",\n        value: function onConversationRemoved(sid) {\n            var conversation = this.conversations.get(sid);\n            if (conversation) {\n                this.conversations.delete(sid);\n                this.emit('conversationRemoved', conversation);\n            }\n        }\n    }, {\n        key: \"registerForEvents\",\n        value: function registerForEvents(conversation) {\n            var _this8 = this;\n\n            conversation.on('removed', function () {\n                return _this8.onConversationRemoved(conversation.sid);\n            });\n            conversation.on('updated', function (args) {\n                return _this8.emit('conversationUpdated', args);\n            });\n            conversation.on('participantJoined', this.emit.bind(this, 'participantJoined'));\n            conversation.on('participantLeft', this.emit.bind(this, 'participantLeft'));\n            conversation.on('participantUpdated', function (args) {\n                return _this8.emit('participantUpdated', args);\n            });\n            conversation.on('messageAdded', this.emit.bind(this, 'messageAdded'));\n            conversation.on('messageUpdated', function (args) {\n                return _this8.emit('messageUpdated', args);\n            });\n            conversation.on('messageRemoved', this.emit.bind(this, 'messageRemoved'));\n            conversation.on('typingStarted', this.emit.bind(this, 'typingStarted'));\n            conversation.on('typingEnded', this.emit.bind(this, 'typingEnded'));\n        }\n    }]);\n    return Conversations;\n}(events_1.EventEmitter);\n\nexports.Conversations = Conversations;"]},"metadata":{},"sourceType":"script"}