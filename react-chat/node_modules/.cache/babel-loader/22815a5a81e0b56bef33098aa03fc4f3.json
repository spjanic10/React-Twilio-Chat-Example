{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar UsAppToPersonList;\nvar UsAppToPersonPage;\nvar UsAppToPersonInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n * @param {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n */\n\n/* jshint ignore:end */\n\nUsAppToPersonList = function UsAppToPersonList(version, messagingServiceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function usAppToPerson\n   * @memberof Twilio.Messaging.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n\n  /* jshint ignore:end */\n  function UsAppToPersonListInstance(sid) {\n    return UsAppToPersonListInstance.get(sid);\n  }\n\n  UsAppToPersonListInstance._version = version; // Path Solution\n\n  UsAppToPersonListInstance._solution = {\n    messagingServiceSid: messagingServiceSid\n  };\n  UsAppToPersonListInstance._uri = \"/Services/\".concat(messagingServiceSid, \"/Compliance/Usa2p\");\n  /* jshint ignore:start */\n\n  /**\n   * create a UsAppToPersonInstance\n   *\n   * @function create\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.brandRegistrationSid - A2P Brand Registration SID\n   * @param {string} opts.description -\n   *          A short description of what this SMS campaign does\n   * @param {string|list} opts.messageSamples - Message samples\n   * @param {string} opts.usAppToPersonUsecase - A2P Campaign Use Case.\n   * @param {boolean} opts.hasEmbeddedLinks -\n   *          Indicates that this SMS campaign will send messages that contain links\n   * @param {boolean} opts.hasEmbeddedPhone -\n   *          Indicates that this SMS campaign will send messages that contain phone numbers\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n\n  /* jshint ignore:end */\n\n  UsAppToPersonListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.brandRegistrationSid)) {\n      throw new Error('Required parameter \"opts.brandRegistrationSid\" missing.');\n    }\n\n    if (_.isUndefined(opts.description)) {\n      throw new Error('Required parameter \"opts.description\" missing.');\n    }\n\n    if (_.isUndefined(opts.messageSamples)) {\n      throw new Error('Required parameter \"opts.messageSamples\" missing.');\n    }\n\n    if (_.isUndefined(opts.usAppToPersonUsecase)) {\n      throw new Error('Required parameter \"opts.usAppToPersonUsecase\" missing.');\n    }\n\n    if (_.isUndefined(opts.hasEmbeddedLinks)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedLinks\" missing.');\n    }\n\n    if (_.isUndefined(opts.hasEmbeddedPhone)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedPhone\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'BrandRegistrationSid': _.get(opts, 'brandRegistrationSid'),\n      'Description': _.get(opts, 'description'),\n      'MessageSamples': serialize.map(_.get(opts, 'messageSamples'), function (e) {\n        return e;\n      }),\n      'UsAppToPersonUsecase': _.get(opts, 'usAppToPersonUsecase'),\n      'HasEmbeddedLinks': serialize.bool(_.get(opts, 'hasEmbeddedLinks')),\n      'HasEmbeddedPhone': serialize.bool(_.get(opts, 'hasEmbeddedPhone'))\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * remove a UsAppToPersonInstance\n   *\n   * @function remove\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonListInstance.remove = function remove(callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version.remove({\n      uri: this._uri,\n      method: 'DELETE'\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(payload);\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * fetch a UsAppToPersonInstance\n   *\n   * @function fetch\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonListInstance.fetch = function fetch(callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version.fetch({\n      uri: this._uri,\n      method: 'GET'\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  UsAppToPersonListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsAppToPersonListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsAppToPersonListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsAppToPersonSolution} solution - Path solution\n *\n * @returns UsAppToPersonPage\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonPage = function UsAppToPersonPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsAppToPersonPage.prototype, Page.prototype);\n\nUsAppToPersonPage.prototype.constructor = UsAppToPersonPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of UsAppToPersonInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @param {UsAppToPersonPayload} payload - Payload response from the API\n *\n * @returns UsAppToPersonInstance\n */\n\n/* jshint ignore:end */\n\nUsAppToPersonPage.prototype.getInstance = function getInstance(payload) {\n  return new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsAppToPersonPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} brandRegistrationSid - A2P Brand Registration SID\n * @property {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @property {string} description -\n *          A short description of what this SMS campaign does\n * @property {string} messageSamples - Message samples\n * @property {string} usAppToPersonUsecase - A2P Campaign Use Case.\n * @property {boolean} hasEmbeddedLinks -\n *          Indicate that this SMS campaign will send messages that contain links\n * @property {boolean} hasEmbeddedPhone -\n *          Indicates that this SMS campaign will send messages that contain phone numbers\n * @property {string} status - Campaign status\n * @property {string} campaignId - The Campaign Registry (TCR) Campaign ID.\n * @property {boolean} isExternallyRegistered -\n *          Indicates whether the campaign was registered externally or not\n * @property {object} rateLimits -\n *          Rate limit and/or classification set by each carrier\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the US App to Person resource\n *\n * @param {V1} version - Version of the resource\n * @param {UsAppToPersonPayload} payload - The instance payload\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonInstance = function UsAppToPersonInstance(version, payload, messagingServiceSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.brandRegistrationSid = payload.brand_registration_sid; // jshint ignore:line\n\n  this.messagingServiceSid = payload.messaging_service_sid; // jshint ignore:line\n\n  this.description = payload.description; // jshint ignore:line\n\n  this.messageSamples = payload.message_samples; // jshint ignore:line\n\n  this.usAppToPersonUsecase = payload.us_app_to_person_usecase; // jshint ignore:line\n\n  this.hasEmbeddedLinks = payload.has_embedded_links; // jshint ignore:line\n\n  this.hasEmbeddedPhone = payload.has_embedded_phone; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.campaignId = payload.campaign_id; // jshint ignore:line\n\n  this.isExternallyRegistered = payload.is_externally_registered; // jshint ignore:line\n\n  this.rateLimits = payload.rate_limits; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    messagingServiceSid: messagingServiceSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsAppToPersonInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsAppToPersonInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsAppToPersonList: UsAppToPersonList,\n  UsAppToPersonPage: UsAppToPersonPage,\n  UsAppToPersonInstance: UsAppToPersonInstance\n};","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/twilio/lib/rest/messaging/v1/service/usAppToPerson.js"],"names":["Q","require","_","util","Page","deserialize","serialize","values","UsAppToPersonList","UsAppToPersonPage","UsAppToPersonInstance","version","messagingServiceSid","UsAppToPersonListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","brandRegistrationSid","description","messageSamples","usAppToPersonUsecase","hasEmbeddedLinks","hasEmbeddedPhone","deferred","defer","data","of","map","e","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","remove","fetch","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","brand_registration_sid","messaging_service_sid","message_samples","us_app_to_person_usecase","has_embedded_links","has_embedded_phone","status","campaignId","campaign_id","isExternallyRegistered","is_externally_registered","rateLimits","rate_limits","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar UsAppToPersonList;\nvar UsAppToPersonPage;\nvar UsAppToPersonInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonList\n *\n * @param {Twilio.Messaging.V1} version - Version of the resource\n * @param {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n */\n/* jshint ignore:end */\nUsAppToPersonList = function UsAppToPersonList(version, messagingServiceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function usAppToPerson\n   * @memberof Twilio.Messaging.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Messaging.V1.ServiceContext.UsAppToPersonContext}\n   */\n  /* jshint ignore:end */\n  function UsAppToPersonListInstance(sid) {\n    return UsAppToPersonListInstance.get(sid);\n  }\n\n  UsAppToPersonListInstance._version = version;\n  // Path Solution\n  UsAppToPersonListInstance._solution = {messagingServiceSid: messagingServiceSid};\n  UsAppToPersonListInstance._uri = `/Services/${messagingServiceSid}/Compliance/Usa2p`;\n  /* jshint ignore:start */\n  /**\n   * create a UsAppToPersonInstance\n   *\n   * @function create\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.brandRegistrationSid - A2P Brand Registration SID\n   * @param {string} opts.description -\n   *          A short description of what this SMS campaign does\n   * @param {string|list} opts.messageSamples - Message samples\n   * @param {string} opts.usAppToPersonUsecase - A2P Campaign Use Case.\n   * @param {boolean} opts.hasEmbeddedLinks -\n   *          Indicates that this SMS campaign will send messages that contain links\n   * @param {boolean} opts.hasEmbeddedPhone -\n   *          Indicates that this SMS campaign will send messages that contain phone numbers\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts.brandRegistrationSid)) {\n      throw new Error('Required parameter \"opts.brandRegistrationSid\" missing.');\n    }\n    if (_.isUndefined(opts.description)) {\n      throw new Error('Required parameter \"opts.description\" missing.');\n    }\n    if (_.isUndefined(opts.messageSamples)) {\n      throw new Error('Required parameter \"opts.messageSamples\" missing.');\n    }\n    if (_.isUndefined(opts.usAppToPersonUsecase)) {\n      throw new Error('Required parameter \"opts.usAppToPersonUsecase\" missing.');\n    }\n    if (_.isUndefined(opts.hasEmbeddedLinks)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedLinks\" missing.');\n    }\n    if (_.isUndefined(opts.hasEmbeddedPhone)) {\n      throw new Error('Required parameter \"opts.hasEmbeddedPhone\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'BrandRegistrationSid': _.get(opts, 'brandRegistrationSid'),\n      'Description': _.get(opts, 'description'),\n      'MessageSamples': serialize.map(_.get(opts, 'messageSamples'), function(e) { return e; }),\n      'UsAppToPersonUsecase': _.get(opts, 'usAppToPersonUsecase'),\n      'HasEmbeddedLinks': serialize.bool(_.get(opts, 'hasEmbeddedLinks')),\n      'HasEmbeddedPhone': serialize.bool(_.get(opts, 'hasEmbeddedPhone'))\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsAppToPersonInstance(\n        this._version,\n        payload,\n        this._solution.messagingServiceSid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * remove a UsAppToPersonInstance\n   *\n   * @function remove\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.remove = function remove(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(payload);\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * fetch a UsAppToPersonInstance\n   *\n   * @function fetch\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed UsAppToPersonInstance\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.fetch = function fetch(callback) {\n    var deferred = Q.defer();\n    var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new UsAppToPersonInstance(\n        this._version,\n        payload,\n        this._solution.messagingServiceSid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UsAppToPersonListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsAppToPersonListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsAppToPersonListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsAppToPersonSolution} solution - Path solution\n *\n * @returns UsAppToPersonPage\n */\n/* jshint ignore:end */\nUsAppToPersonPage = function UsAppToPersonPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsAppToPersonPage.prototype, Page.prototype);\nUsAppToPersonPage.prototype.constructor = UsAppToPersonPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UsAppToPersonInstance\n *\n * @function getInstance\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @param {UsAppToPersonPayload} payload - Payload response from the API\n *\n * @returns UsAppToPersonInstance\n */\n/* jshint ignore:end */\nUsAppToPersonPage.prototype.getInstance = function getInstance(payload) {\n  return new UsAppToPersonInstance(this._version, payload, this._solution.messagingServiceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsAppToPersonPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UsAppToPersonContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} brandRegistrationSid - A2P Brand Registration SID\n * @property {string} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n * @property {string} description -\n *          A short description of what this SMS campaign does\n * @property {string} messageSamples - Message samples\n * @property {string} usAppToPersonUsecase - A2P Campaign Use Case.\n * @property {boolean} hasEmbeddedLinks -\n *          Indicate that this SMS campaign will send messages that contain links\n * @property {boolean} hasEmbeddedPhone -\n *          Indicates that this SMS campaign will send messages that contain phone numbers\n * @property {string} status - Campaign status\n * @property {string} campaignId - The Campaign Registry (TCR) Campaign ID.\n * @property {boolean} isExternallyRegistered -\n *          Indicates whether the campaign was registered externally or not\n * @property {object} rateLimits -\n *          Rate limit and/or classification set by each carrier\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the US App to Person resource\n *\n * @param {V1} version - Version of the resource\n * @param {UsAppToPersonPayload} payload - The instance payload\n * @param {sid} messagingServiceSid -\n *          The SID of the Messaging Service the resource is associated with\n */\n/* jshint ignore:end */\nUsAppToPersonInstance = function UsAppToPersonInstance(version, payload,\n                                                        messagingServiceSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.brandRegistrationSid = payload.brand_registration_sid; // jshint ignore:line\n  this.messagingServiceSid = payload.messaging_service_sid; // jshint ignore:line\n  this.description = payload.description; // jshint ignore:line\n  this.messageSamples = payload.message_samples; // jshint ignore:line\n  this.usAppToPersonUsecase = payload.us_app_to_person_usecase; // jshint ignore:line\n  this.hasEmbeddedLinks = payload.has_embedded_links; // jshint ignore:line\n  this.hasEmbeddedPhone = payload.has_embedded_phone; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.campaignId = payload.campaign_id; // jshint ignore:line\n  this.isExternallyRegistered = payload.is_externally_registered; // jshint ignore:line\n  this.rateLimits = payload.rate_limits; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {messagingServiceSid: messagingServiceSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Messaging.V1.ServiceContext.UsAppToPersonInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUsAppToPersonInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUsAppToPersonInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsAppToPersonList: UsAppToPersonList,\n  UsAppToPersonPage: UsAppToPersonPage,\n  UsAppToPersonInstance: UsAppToPersonInstance\n};\n"]},"metadata":{},"sourceType":"script"}