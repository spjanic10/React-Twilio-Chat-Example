{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar events_1 = require(\"events\");\n\nfunction isDef(value) {\n  return value !== undefined && value !== null;\n}\n\nvar Backoff = /*#__PURE__*/function (_events_1$EventEmitte) {\n  _inherits(Backoff, _events_1$EventEmitte);\n\n  var _super = _createSuper(Backoff);\n\n  function Backoff(options) {\n    var _this;\n\n    _classCallCheck(this, Backoff);\n\n    _this = _super.call(this);\n    options = options || {};\n\n    if (isDef(options.initialDelay) && options.initialDelay < 1) {\n      throw new Error('The initial timeout must be equal to or greater than 1.');\n    } else if (isDef(options.maxDelay) && options.maxDelay <= 1) {\n      throw new Error('The maximal timeout must be greater than 1.');\n    } else if (isDef(options.randomisationFactor) && (options.randomisationFactor < 0 || options.randomisationFactor > 1)) {\n      throw new Error('The randomisation factor must be between 0 and 1.');\n    } else if (isDef(options.factor) && options.factor <= 1) {\n      throw new Error(\"Exponential factor should be greater than 1.\");\n    }\n\n    _this.initialDelay = options.initialDelay || 100;\n    _this.maxDelay = options.maxDelay || 10000;\n\n    if (_this.maxDelay <= _this.initialDelay) {\n      throw new Error('The maximal backoff delay must be greater than the initial backoff delay.');\n    }\n\n    _this.randomisationFactor = options.randomisationFactor || 0;\n    _this.factor = options.factor || 2;\n    _this.maxNumberOfRetry = -1;\n\n    _this.reset();\n\n    return _this;\n  }\n\n  _createClass(Backoff, [{\n    key: \"backoff\",\n    value: function backoff(err) {\n      if (this.timeoutID == null) {\n        if (this.backoffNumber === this.maxNumberOfRetry) {\n          this.emit('fail', err);\n          this.reset();\n        } else {\n          this.backoffDelay = this.next();\n          this.timeoutID = setTimeout(this.onBackoff.bind(this), this.backoffDelay);\n          this.emit('backoff', this.backoffNumber, this.backoffDelay, err);\n        }\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.backoffDelay = 0;\n      this.nextBackoffDelay = this.initialDelay;\n      this.backoffNumber = 0;\n      clearTimeout(this.timeoutID);\n      this.timeoutID = null;\n    }\n  }, {\n    key: \"failAfter\",\n    value: function failAfter(maxNumberOfRetry) {\n      if (maxNumberOfRetry <= 0) {\n        throw new Error(\"Expected a maximum number of retry greater than 0 but got \".concat(maxNumberOfRetry));\n      }\n\n      this.maxNumberOfRetry = maxNumberOfRetry;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.backoffDelay = Math.min(this.nextBackoffDelay, this.maxDelay);\n      this.nextBackoffDelay = this.backoffDelay * this.factor;\n      var randomisationMultiple = 1 + Math.random() * this.randomisationFactor;\n      return Math.min(this.maxDelay, Math.round(this.backoffDelay * randomisationMultiple));\n    }\n  }, {\n    key: \"onBackoff\",\n    value: function onBackoff() {\n      this.timeoutID = null;\n      this.emit('ready', this.backoffNumber, this.backoffDelay);\n      this.backoffNumber++;\n    }\n  }], [{\n    key: \"exponential\",\n    value: function exponential(options) {\n      return new Backoff(options);\n    }\n  }]);\n\n  return Backoff;\n}(events_1.EventEmitter);\n\nexports.Backoff = Backoff;\nexports.default = Backoff;","map":{"version":3,"sources":["../src/backoff.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nfunction isDef(value) {\n    return value !== undefined && value !== null;\n}\nclass Backoff extends events_1.EventEmitter {\n    constructor(options) {\n        super();\n        options = options || {};\n        if (isDef(options.initialDelay) && options.initialDelay < 1) {\n            throw new Error('The initial timeout must be equal to or greater than 1.');\n        }\n        else if (isDef(options.maxDelay) && options.maxDelay <= 1) {\n            throw new Error('The maximal timeout must be greater than 1.');\n        }\n        else if (isDef(options.randomisationFactor) &&\n            (options.randomisationFactor < 0 || options.randomisationFactor > 1)) {\n            throw new Error('The randomisation factor must be between 0 and 1.');\n        }\n        else if (isDef(options.factor) && options.factor <= 1) {\n            throw new Error(`Exponential factor should be greater than 1.`);\n        }\n        this.initialDelay = options.initialDelay || 100;\n        this.maxDelay = options.maxDelay || 10000;\n        if (this.maxDelay <= this.initialDelay) {\n            throw new Error('The maximal backoff delay must be greater than the initial backoff delay.');\n        }\n        this.randomisationFactor = options.randomisationFactor || 0;\n        this.factor = options.factor || 2;\n        this.maxNumberOfRetry = -1;\n        this.reset();\n    }\n    static exponential(options) {\n        return new Backoff(options);\n    }\n    backoff(err) {\n        if (this.timeoutID == null) {\n            if (this.backoffNumber === this.maxNumberOfRetry) {\n                this.emit('fail', err);\n                this.reset();\n            }\n            else {\n                this.backoffDelay = this.next();\n                this.timeoutID = setTimeout(this.onBackoff.bind(this), this.backoffDelay);\n                this.emit('backoff', this.backoffNumber, this.backoffDelay, err);\n            }\n        }\n    }\n    reset() {\n        this.backoffDelay = 0;\n        this.nextBackoffDelay = this.initialDelay;\n        this.backoffNumber = 0;\n        clearTimeout(this.timeoutID);\n        this.timeoutID = null;\n    }\n    failAfter(maxNumberOfRetry) {\n        if (maxNumberOfRetry <= 0) {\n            throw new Error(`Expected a maximum number of retry greater than 0 but got ${maxNumberOfRetry}`);\n        }\n        this.maxNumberOfRetry = maxNumberOfRetry;\n    }\n    next() {\n        this.backoffDelay = Math.min(this.nextBackoffDelay, this.maxDelay);\n        this.nextBackoffDelay = this.backoffDelay * this.factor;\n        let randomisationMultiple = 1 + Math.random() * this.randomisationFactor;\n        return Math.min(this.maxDelay, Math.round(this.backoffDelay * randomisationMultiple));\n    }\n    onBackoff() {\n        this.timeoutID = null;\n        this.emit('ready', this.backoffNumber, this.backoffDelay);\n        this.backoffNumber++;\n    }\n}\nexports.Backoff = Backoff;\nexports.default = Backoff;\n//# sourceMappingURL=backoff.js.map"]},"metadata":{},"sourceType":"script"}