{"ast":null,"code":"var _classCallCheck = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLAttribute, XMLNode;\n  NodeType = require('./NodeType');\n  XMLNode = require('./XMLNode'); // Represents an attribute\n\n  module.exports = XMLAttribute = function () {\n    var XMLAttribute = /*#__PURE__*/function () {\n      \"use strict\";\n\n      // Initializes a new instance of `XMLAttribute`\n      // `parent` the parent node\n      // `name` attribute target\n      // `value` attribute value\n      function XMLAttribute(parent, name, value) {\n        _classCallCheck(this, XMLAttribute);\n\n        this.parent = parent;\n\n        if (this.parent) {\n          this.options = this.parent.options;\n          this.stringify = this.parent.stringify;\n        }\n\n        if (name == null) {\n          throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n        }\n\n        this.name = this.stringify.name(name);\n        this.value = this.stringify.attValue(value);\n        this.type = NodeType.Attribute; // DOM level 3\n\n        this.isId = false;\n        this.schemaTypeInfo = null;\n      } // Creates and returns a deep clone of `this`\n\n\n      _createClass(XMLAttribute, [{\n        key: \"clone\",\n        value: function clone() {\n          return Object.create(this);\n        } // Converts the XML fragment to string\n        // `options.pretty` pretty prints the result\n        // `options.indent` indentation for pretty print\n        // `options.offset` how many indentations to add to every line for pretty print\n        // `options.newline` newline sequence for pretty print\n\n      }, {\n        key: \"toString\",\n        value: function toString(options) {\n          return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n        } // Returns debug string for this node\n\n      }, {\n        key: \"debugInfo\",\n        value: function debugInfo(name) {\n          name = name || this.name;\n\n          if (name == null) {\n            return \"parent: <\" + this.parent.name + \">\";\n          } else {\n            return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n          }\n        }\n      }, {\n        key: \"isEqualNode\",\n        value: function isEqualNode(node) {\n          if (node.namespaceURI !== this.namespaceURI) {\n            return false;\n          }\n\n          if (node.prefix !== this.prefix) {\n            return false;\n          }\n\n          if (node.localName !== this.localName) {\n            return false;\n          }\n\n          if (node.value !== this.value) {\n            return false;\n          }\n\n          return true;\n        }\n      }]);\n\n      return XMLAttribute;\n    }();\n\n    ; // DOM level 1\n\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function get() {\n        return this.type;\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function get() {\n        return this.parent;\n      }\n    }); // DOM level 3\n\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(value) {\n        return this.value = value || '';\n      }\n    }); // DOM level 4\n\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function get() {\n        return '';\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function get() {\n        return '';\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function get() {\n        return this.name;\n      }\n    });\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function get() {\n        return true;\n      }\n    });\n    return XMLAttribute;\n  }.call(this);\n}).call(this);","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/xmlbuilder/lib/XMLAttribute.js"],"names":["NodeType","XMLAttribute","XMLNode","require","module","exports","parent","name","value","options","stringify","Error","debugInfo","attValue","type","Attribute","isId","schemaTypeInfo","Object","create","writer","attribute","filterOptions","node","namespaceURI","prefix","localName","defineProperty","prototype","get","set","call"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  // Represents an attribute\n  module.exports = XMLAttribute = (function() {\n    class XMLAttribute {\n      // Initializes a new instance of `XMLAttribute`\n\n      // `parent` the parent node\n      // `name` attribute target\n      // `value` attribute value\n      constructor(parent, name, value) {\n        this.parent = parent;\n        if (this.parent) {\n          this.options = this.parent.options;\n          this.stringify = this.parent.stringify;\n        }\n        if (name == null) {\n          throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n        }\n        this.name = this.stringify.name(name);\n        this.value = this.stringify.attValue(value);\n        this.type = NodeType.Attribute;\n        // DOM level 3\n        this.isId = false;\n        this.schemaTypeInfo = null;\n      }\n\n      // Creates and returns a deep clone of `this`\n      clone() {\n        return Object.create(this);\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n      }\n\n      \n      // Returns debug string for this node\n      debugInfo(name) {\n        name = name || this.name;\n        if (name == null) {\n          return \"parent: <\" + this.parent.name + \">\";\n        } else {\n          return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n        }\n      }\n\n      isEqualNode(node) {\n        if (node.namespaceURI !== this.namespaceURI) {\n          return false;\n        }\n        if (node.prefix !== this.prefix) {\n          return false;\n        }\n        if (node.localName !== this.localName) {\n          return false;\n        }\n        if (node.value !== this.value) {\n          return false;\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    // DOM level 4\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    return XMLAttribute;\n\n  }).call(this);\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}