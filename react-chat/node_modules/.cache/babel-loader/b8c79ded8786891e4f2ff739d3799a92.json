{"ast":null,"code":"var _classCallCheck = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/stefanpjanic/Desktop/mango_dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDeclaration, XMLNode, isObject;\n\n  var _require = require('./Utility');\n\n  isObject = _require.isObject;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType'); // Represents the XML declaration\n\n  module.exports = XMLDeclaration = /*#__PURE__*/function (_XMLNode) {\n    \"use strict\";\n\n    _inherits(XMLDeclaration, _XMLNode);\n\n    var _super = _createSuper(XMLDeclaration);\n\n    // Initializes a new instance of `XMLDeclaration`\n    // `parent` the document object\n    // `version` A version number string, e.g. 1.0\n    // `encoding` Encoding declaration, e.g. UTF-8\n    // `standalone` standalone document declaration: true or false\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var _this;\n\n      _classCallCheck(this, XMLDeclaration);\n\n      _this = _super.call(this, parent); // arguments may also be passed as an object\n\n      if (isObject(version)) {\n        var _version = version;\n        version = _version.version;\n        encoding = _version.encoding;\n        standalone = _version.standalone;\n      }\n\n      if (!version) {\n        version = '1.0';\n      }\n\n      _this.type = NodeType.Declaration;\n      _this.version = _this.stringify.xmlVersion(version);\n\n      if (encoding != null) {\n        _this.encoding = _this.stringify.xmlEncoding(encoding);\n      }\n\n      if (standalone != null) {\n        _this.standalone = _this.stringify.xmlStandalone(standalone);\n      }\n\n      return _this;\n    } // Converts to string\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n\n\n    _createClass(XMLDeclaration, [{\n      key: \"toString\",\n      value: function toString(options) {\n        return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n      }\n    }]);\n\n    return XMLDeclaration;\n  }(XMLNode);\n}).call(this);","map":{"version":3,"sources":["/Users/stefanpjanic/Desktop/mango_dev/node_modules/xmlbuilder/lib/XMLDeclaration.js"],"names":["NodeType","XMLDeclaration","XMLNode","isObject","require","module","exports","parent","version","encoding","standalone","type","Declaration","stringify","xmlVersion","xmlEncoding","xmlStandalone","options","writer","declaration","filterOptions","call"],"mappings":";;;;;;;;AAAA;AACA,CAAC,YAAW;AACV,MAAIA,QAAJ,EAAcC,cAAd,EAA8BC,OAA9B,EAAuCC,QAAvC;;AADU,iBAGIC,OAAO,CAAC,WAAD,CAHX;;AAGRD,EAAAA,QAHQ,YAGRA,QAHQ;AAKVD,EAAAA,OAAO,GAAGE,OAAO,CAAC,WAAD,CAAjB;AAEAJ,EAAAA,QAAQ,GAAGI,OAAO,CAAC,YAAD,CAAlB,CAPU,CASV;;AACAC,EAAAA,MAAM,CAACC,OAAP,GAAiBL,cAAc;AAAA;;AAAA;;AAAA;;AAC7B;AAEA;AAEA;AACA;AACA;AACA,4BAAYM,MAAZ,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,UAAvC,EAAmD;AAAA;;AAAA;;AACjD,gCAAMH,MAAN,EADiD,CAEjD;;AACA,UAAIJ,QAAQ,CAACK,OAAD,CAAZ,EAAuB;AAAA,uBACcA,OADd;AACnBA,QAAAA,OADmB,YACnBA,OADmB;AACVC,QAAAA,QADU,YACVA,QADU;AACAC,QAAAA,UADA,YACAA,UADA;AAEtB;;AACD,UAAI,CAACF,OAAL,EAAc;AACZA,QAAAA,OAAO,GAAG,KAAV;AACD;;AACD,YAAKG,IAAL,GAAYX,QAAQ,CAACY,WAArB;AACA,YAAKJ,OAAL,GAAe,MAAKK,SAAL,CAAeC,UAAf,CAA0BN,OAA1B,CAAf;;AACA,UAAIC,QAAQ,IAAI,IAAhB,EAAsB;AACpB,cAAKA,QAAL,GAAgB,MAAKI,SAAL,CAAeE,WAAf,CAA2BN,QAA3B,CAAhB;AACD;;AACD,UAAIC,UAAU,IAAI,IAAlB,EAAwB;AACtB,cAAKA,UAAL,GAAkB,MAAKG,SAAL,CAAeG,aAAf,CAA6BN,UAA7B,CAAlB;AACD;;AAhBgD;AAiBlD,KAzB4B,CA2B7B;AAEA;AACA;AACA;AACA;;;AAhC6B;AAAA;AAAA,aAiC7B,kBAASO,OAAT,EAAkB;AAChB,eAAO,KAAKA,OAAL,CAAaC,MAAb,CAAoBC,WAApB,CAAgC,IAAhC,EAAsC,KAAKF,OAAL,CAAaC,MAAb,CAAoBE,aAApB,CAAkCH,OAAlC,CAAtC,CAAP;AACD;AAnC4B;;AAAA;AAAA,IAAgCf,OAAhC,CAA/B;AAuCD,CAjDD,EAiDGmB,IAjDH,CAiDQ,IAjDR","sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject;\n\n  ({isObject} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents the XML declaration\n  module.exports = XMLDeclaration = class XMLDeclaration extends XMLNode {\n    // Initializes a new instance of `XMLDeclaration`\n\n    // `parent` the document object\n\n    // `version` A version number string, e.g. 1.0\n    // `encoding` Encoding declaration, e.g. UTF-8\n    // `standalone` standalone document declaration: true or false\n    constructor(parent, version, encoding, standalone) {\n      super(parent);\n      // arguments may also be passed as an object\n      if (isObject(version)) {\n        ({version, encoding, standalone} = version);\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    // Converts to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}