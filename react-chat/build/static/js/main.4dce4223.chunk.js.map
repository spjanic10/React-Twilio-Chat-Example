{"version":3,"sources":["assets/Conversation.module.css","assets/ConversationsItem.module.css","assets/ConversationsList.module.css","assets/MessageBubble.module.css","logo.svg","ChatIcon.js","MessageBubble.js","ConversationsMessages.js","Conversation.js","ConversationsList.js","utils/class-name.js","HeaderItem.js","ConversationsApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChatIcon","render","width","height","viewBox","fill","d","PureComponent","MessageBubble","props","componentDidMount","a","state","message","getParticipant","type","setState","hasMedia","media","getContentTemporaryUrl","then","url","mediaUrl","catch","e","mediaDownloadFailed","document","getElementById","sid","scrollIntoView","behavior","direction","itemStyle","styles","received_msg","divStyle","received_withd_msg","outgoing_msg","sent_msg","m","console","log","id","className","style","fontSize","component","author","medias","hasFailed","body","time_date","timestamp","toLocaleString","prevProps","prevState","snapshot","this","Component","Media","placeholder","onClick","Modal","info","centered","icon","okText","content","picture_container","alt","src","display","flexDirection","media_icon","zIndex","position","opacity","picture_preview","backgroundImage","ConversationsMessages","messages","map","identity","index","Conversation","loadMessagesFor","thisConversation","conversationProxy","getMessages","messagePaginator","items","loadingState","err","error","boundConversations","has","newConversation","on","messageAdded","Set","componentDidUpdate","oldProps","oldState","targetConversation","onMessageChanged","event","newMessage","target","value","sendMessage","preventDefault","onDrop","acceptedFiles","contentType","accept","getRootProps","getInputProps","isDragActive","top","drop","color","filter","flexBasis","flexGrow","flexShrink","overflowY","myIdentity","onSubmit","Group","compact","name","autoComplete","disabled","onChange","htmlType","newProps","Text","Typography","ConversationsList","conversations","selectedConversationSid","onConversationClick","conversationsListStyles","bordered","loading","length","dataSource","renderItem","item","activeChannel","conversationItemClassName","conversationsItemStyles","Boolean","join","Item","strong","friendlyName","React","HeaderItem","children","finalStyle","padding","Content","Layout","Sider","Header","ConversationsApp","loggedIn","getToken","logIn","localStorage","setItem","getUsername","username","axios","get","response","data","usrname","token","initConversations","window","conversationsClient","ConversationsClient","create","status","conversationsReady","conversation","it","getItem","conversationContent","selectedConversation","find","background","maxWidth","float","href","marginLeft","theme","App","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4dce4223.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropzone\":\"Conversation_Dropzone__15hnk\",\"drop\":\"Conversation_drop__2apuC\",\"active\":\"Conversation_active__1BNWw\",\"messages\":\"Conversation_messages__1KgS7\",\"Highlight\":\"Conversation_Highlight__1jIO5\",\"type-a-message\":\"Conversation_type-a-message__2ks33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversation-item\":\"ConversationsItem_conversation-item__1DIn_\",\"conversation-item--active\":\"ConversationsItem_conversation-item--active__39CfD\",\"conversation-item-text\":\"ConversationsItem_conversation-item-text__2VjQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-channels-list\":\"ConversationsList_chat-channels-list__228lf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"incoming_msg_img\":\"MessageBubble_incoming_msg_img__2NTPH\",\"received_msg\":\"MessageBubble_received_msg__29axb\",\"received_withd_msg\":\"MessageBubble_received_withd_msg__2MC6p\",\"time_date\":\"MessageBubble_time_date__3sfzs\",\"sent_msg\":\"MessageBubble_sent_msg__Il0B-\",\"outgoing_msg\":\"MessageBubble_outgoing_msg__1yX32\",\"input_msg_write\":\"MessageBubble_input_msg_write__2C3Y9\",\"image\":\"MessageBubble_image__3ovCZ\",\"picture_preview\":\"MessageBubble_picture_preview__Xdxpt\",\"media_icon\":\"MessageBubble_media_icon__27H33\",\"picture_container\":\"MessageBubble_picture_container__h5Eje\",\"media\":\"MessageBubble_media__3tn1o\",\"placeholder\":\"MessageBubble_placeholder__1ib-9\",\"medias\":\"MessageBubble_medias__1QOlg\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {PureComponent} from \"react\";\n\nexport default class ChatIcon extends PureComponent {\n  render = () => {\n    return (\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 1024 1024\">\n          <path fill=\"currentColor\" d={`M161.69,935.7060000000001C161.69,935.7060000000001,161.69,681.344,161.69,681.344C161.69,681.344,0,681.344,0,681.344C0,681.344,0,88.50000000000011,0,88.50000000000011C0,88.50000000000011,1024,88.50000000000011,1024,88.50000000000011C1024,88.50000000000011,1024,681.344,1024,681.344C1024,681.344,504.986,681.344,504.986,681.344C504.986,681.344,161.69,935.7060000000001,161.69,935.7060000000001C161.69,935.7060000000001,161.69,935.7060000000001,161.69,935.7060000000001M53.914,627.4310000000002C53.914,627.4310000000002,215.603,627.4310000000002,215.603,627.4310000000002C215.603,627.4310000000002,215.603,828.4420000000001,215.603,828.4420000000001C215.603,828.4420000000001,485.069,627.4310000000002,485.069,627.4310000000002C485.069,627.4310000000002,970.086,627.4310000000002,970.086,627.4310000000002C970.086,627.4310000000002,970.086,142.36200000000008,970.086,142.36200000000008C970.086,142.36200000000008,53.914,142.36200000000008,53.914,142.36200000000008C53.914,142.36200000000008,53.914,627.4310000000002,53.914,627.4310000000002C53.914,627.4310000000002,53.914,627.4310000000002,53.914,627.4310000000002M161.69,384.8960000000002C161.69,447.1560000000002,229.069,486.0160000000001,282.931,454.9380000000001C307.968,440.4480000000001,323.379,413.77300000000014,323.379,384.8960000000002C323.379,322.6880000000001,256,283.7760000000002,202.086,314.9060000000002C177.101,329.34400000000016,161.69,356.0200000000001,161.69,384.8960000000002M431.155,384.8960000000002C431.155,447.1560000000002,498.534,486.0160000000001,552.448,454.9380000000001C577.434,440.4480000000001,592.845,413.77300000000014,592.845,384.8960000000002C592.845,322.6880000000001,525.466,283.7760000000002,471.603,314.9060000000002C446.566,329.34400000000016,431.155,356.0200000000001,431.155,384.8960000000002M700.621,384.8960000000002C700.621,447.1560000000002,768,486.0160000000001,821.914,454.9380000000001C846.899,440.4480000000001,862.31,413.77300000000014,862.31,384.8960000000002C862.31,322.6880000000001,794.931,283.7760000000002,741.069,314.9060000000002C716.032,329.34400000000016,700.621,356.0200000000001,700.621,384.8960000000002`}>\n          </path>\n        </svg>\n    );\n  }\n}","import React, { Component, PureComponent } from \"react\";\nimport styles from \"./assets/MessageBubble.module.css\";\nimport PropTypes from \"prop-types\";\nimport { Spin, Modal, Icon } from \"antd\";\n\nimport ChatIcon from \"./ChatIcon\";\n\nclass MessageBubble extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasMedia: this.props.message.type === \"media\",\n      mediaDownloadFailed: false,\n      mediaUrl: null\n    };\n  }\n\n  componentDidMount = async () => {\n    this.setState({\n      ...this.state,\n      type: (await this.props.message.getParticipant()).type\n    });\n    if (this.state.hasMedia) {\n      this.props.message.media\n        .getContentTemporaryUrl()\n        .then((url) => {\n          this.setState({ mediaUrl: url });\n        })\n        .catch((e) => this.setState({ mediaDownloadFailed: true }));\n    }\n    document\n      .getElementById(this.props.message.sid)\n      .scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    document\n      .getElementById(this.props.message.sid)\n      .scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  render = () => {\n    const { itemStyle, divStyle } =\n      this.props.direction === \"incoming\"\n        ? {\n            itemStyle: styles.received_msg,\n            divStyle: styles.received_withd_msg\n          }\n        : { itemStyle: styles.outgoing_msg, divStyle: styles.sent_msg };\n\n    const m = this.props.message;\n    const type = this.state.type;\n\n    if (this.state.hasMedia) {\n      console.log(\"Message is media message\");\n      // log media properties\n      console.log(\"Media properties\", m.media);\n    }\n    console.log(m);\n    return (\n      <li id={m.sid} className={itemStyle}>\n        <div className={divStyle}>\n          <div>\n            <strong>\n              \n              {type === \"chat\" && (\n                <Icon style={{ fontSize: \"16px\" }} component={ChatIcon} />\n              )}\n              {type === \"sms\" && <Icon type={\"mobile\"} />}\n              {` ${m.author}`}\n            </strong>\n\n            <br />\n            <div className={styles.medias}>\n              {this.state.hasMedia && (\n                <Media\n                  hasFailed={this.state.mediaDownloadFailed}\n                  url={this.state.mediaUrl}\n                />\n              )}\n            </div>\n            {m.body}\n          </div>\n          <span className={styles.time_date}>\n            {m.state.timestamp.toLocaleString()}\n          </span>\n        </div>\n      </li>\n    );\n  };\n}\n\nclass Media extends PureComponent {\n  render = () => {\n    const { hasFailed, url } = this.props;\n    return (\n      <div\n        className={`${styles.media}${!url ? \" \" + styles.placeholder : \"\"}`}\n        onClick={() => {\n          Modal.info({\n            centered: true,\n            icon: null,\n            okText: \"Close\",\n            width: \"60%\",\n            content: (\n              <div className={styles.picture_container}>\n                <img style={{ width: \"100%\", height: \"100%\" }} alt=\"description\" src={url} />\n              </div>\n            )\n          });\n        }}\n      >\n        {!url && !hasFailed && <Spin />}\n\n        {hasFailed && (\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <Icon type={\"warning\"} style={{ fontSize: \"5em\" }} />\n            <p>Failed to load media</p>\n          </div>\n        )}\n\n        {!hasFailed && url && (\n          <div className={styles.media_icon}>\n            <div style={{ zIndex: 123, position: \"absolute\" }}>\n              <Icon type={\"eye\"} style={{ fontSize: \"5em\", opacity: 0.3 }} />\n            </div>\n            <div\n              className={styles.picture_preview}\n              style={{ backgroundImage: `url(${url})`, zIndex: 122 }}\n            ></div>\n          </div>\n        )}\n      </div>\n    );\n  };\n}\n\nMedia.propTypes = {\n  hasFailed: PropTypes.bool.isRequired,\n  url: PropTypes.string\n};\n\nexport default MessageBubble;\n","import MessageBubble from \"./MessageBubble\";\nimport React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ConversationsMessages extends PureComponent {\n  render = () => {\n    return (\n        <div id=\"messages\">\n          <ul>\n            { this.props.messages.map(m => {\n              if (m.author === this.props.identity)\n                return <MessageBubble key={m.index} direction=\"outgoing\" message={m} />;\n              else\n                return <MessageBubble key={m.index} direction=\"incoming\" message={m} />;\n            })\n            }\n          </ul>\n        </div>\n    );\n  }\n}\n\nConversationsMessages.propTypes = {\n  identity: PropTypes.string.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default ConversationsMessages;","import React, { Component } from 'react';\nimport './assets/Conversation.css';\nimport Dropzone from 'react-dropzone';\nimport styles from './assets/Conversation.module.css'\nimport {Button, Form, Icon, Input} from \"antd\";\nimport ConversationsMessages from \"./ConversationsMessages\";\nimport PropTypes from \"prop-types\";\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        newMessage: '',\n        conversationProxy: props.conversationProxy,\n        messages: [],\n        loadingState: 'initializing',\n        boundConversations: new Set()\n    };\n  }\n\n  loadMessagesFor = (thisConversation) => {\n    if (this.state.conversationProxy === thisConversation) {\n        thisConversation.getMessages()\n            .then(messagePaginator => {\n                if (this.state.conversationProxy === thisConversation) {\n                    this.setState({ messages: messagePaginator.items, loadingState: 'ready' });\n                }\n            })\n            .catch(err => {\n                console.error(\"Couldn't fetch messages IMPLEMENT RETRY\", err);\n                this.setState({ loadingState: \"failed\" });\n            });\n    }\n  };\n\n  componentDidMount = () => {\n      if (this.state.conversationProxy) {\n        this.loadMessagesFor(this.state.conversationProxy);\n\n        if (!this.state.boundConversations.has(this.state.conversationProxy)) {\n            let newConversation = this.state.conversationProxy;\n            newConversation.on('messageAdded', m => this.messageAdded(m, newConversation));\n            this.setState({boundConversations: new Set([...this.state.boundConversations, newConversation])});\n        }\n      }\n  }\n\n  componentDidUpdate = (oldProps, oldState) => {\n    if (this.state.conversationProxy !== oldState.conversationProxy) {\n        this.loadMessagesFor(this.state.conversationProxy);\n\n        if (!this.state.boundConversations.has(this.state.conversationProxy)) {\n            let newConversation = this.state.conversationProxy;\n            newConversation.on('messageAdded', m => this.messageAdded(m, newConversation));\n            this.setState({boundConversations: new Set([...this.state.boundConversations, newConversation])});\n        }\n    }\n  };\n\n  static getDerivedStateFromProps(newProps, oldState) {\n    let logic = (oldState.loadingState === 'initializing') || oldState.conversationProxy !== newProps.conversationProxy;\n    if (logic) {\n      return { loadingState: 'loading messages', conversationProxy: newProps.conversationProxy };\n    } else {\n      return null;\n    }\n  }\n\n  messageAdded = (message, targetConversation) => {\n    if (targetConversation === this.state.conversationProxy)\n        this.setState((prevState, props) => ({\n            messages: [...prevState.messages, message]\n        }));\n  };\n\n  onMessageChanged = event => {\n    this.setState({ newMessage: event.target.value });\n  };\n\n  sendMessage = event => {\n    event.preventDefault();\n    const message = this.state.newMessage;\n    this.setState({ newMessage: '' });\n    this.state.conversationProxy.sendMessage(message);\n  };\n\n  onDrop = acceptedFiles => {\n    this.state.conversationProxy.sendMessage({contentType: acceptedFiles[0].type, media: acceptedFiles[0]});\n  };\n\n  render = () => {\n    return (\n        <Dropzone\n            onDrop={this.onDrop}\n            accept=\"image/*\">\n              \n          {({getRootProps, getInputProps, isDragActive}) => (\n              <div\n                  {...getRootProps()}\n                  onClick={() => {\n                  }}\n                  id=\"OpenChannel\"\n                  style={{position: \"relative\", top: 0}}>\n\n                {isDragActive &&\n                <div className={styles.drop}>\n                  <Icon type={\"cloud-upload\"}\n                        style={{fontSize: \"5em\", color: \"#fefefe\"}}/>\n                  <h3 style={{color: \"#fefefe\"}}>Release to Upload</h3>\n                </div>\n                }\n                <div\n                    className={styles.messages}\n                    style={{\n                      filter: `blur(${isDragActive ? 4 : 0}px)`,\n                    }}\n                >\n                  <input id=\"files\" {...getInputProps()} />\n                  <div style={{flexBasis: \"100%\", flexGrow: 2, flexShrink: 1, overflowY: \"scroll\"}}>\n                    <ConversationsMessages\n                        identity={this.props.myIdentity}\n                        messages={this.state.messages}/>\n                  </div>\n                  <div>\n                    <Form onSubmit={this.sendMessage}>\n                      <Input.Group compact={true} style={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"row\"\n                      }}>\n                        <Input\n                            style={{flexBasis: \"100%\"}}\n                            placeholder={\"Type your message here...\"}\n                            type={\"text\"}\n                            name={\"message\"}\n                            id={styles['type-a-message']}\n                            autoComplete={\"off\"}\n                            disabled={this.state.loadingState !== 'ready'}\n                            onChange={this.onMessageChanged}\n                            value={this.state.newMessage}\n                        />\n                        <Button icon=\"enter\" htmlType=\"submit\" type={\"submit\"}/>\n                      </Input.Group>\n                    </Form>\n                  </div>\n                </div>\n              </div>\n          )}\n\n        </Dropzone>\n    );\n  }\n}\n\nConversation.propTypes = {\n  myIdentity: PropTypes.string.isRequired\n};\n\nexport default Conversation;","import React from 'react';\nimport { List, Typography } from \"antd\";\n\nimport conversationsListStyles from \"./assets/ConversationsList.module.css\";\nimport conversationsItemStyles from \"./assets/ConversationsItem.module.css\";\n\nimport { joinClassNames } from \"./utils/class-name\";\n\nconst { Text } = Typography;\n\nexport class ConversationsList extends React.Component {\n    render() {\n        const { conversations, selectedConversationSid, onConversationClick } = this.props;\n\n        return (\n            <List\n                \n                className={conversationsListStyles['conversations-list']}\n                bordered={true}\n                loading={conversations.length === 0}\n                dataSource={conversations}\n                renderItem={item => {\n                    const activeChannel = item.sid === selectedConversationSid;\n                    const conversationItemClassName = joinClassNames([\n                        conversationsItemStyles['conversation-item'],\n                        activeChannel && conversationsItemStyles['conversation-item--active']\n                    ]);\n\n                    return (\n                        <List.Item\n                            key={item.sid}\n                            onClick={() => onConversationClick(item)}\n                            className={conversationItemClassName}\n                            \n                        >\n                            <Text\n                                strong\n                                className={conversationsItemStyles['conversation-item-text']}\n                            >\n                                {item.friendlyName || item.sid}\n                            </Text>\n                        </List.Item>\n                    )\n                }}\n            />\n        )\n    }\n}\n","export function joinClassNames(classNames) {\n    return classNames.filter(Boolean).join(' ');\n}\n","import React from 'react';\n\nexport const HeaderItem = ({ children, style }) => {\n    const finalStyle = {padding: '0 19px 0 19px', ...style};\n\n    return (\n        <div style={finalStyle}>\n            {children}\n        </div>\n    )\n};\n","import React from \"react\";\nimport { Layout, Typography } from \"antd\";\nimport { Client as ConversationsClient } from \"@twilio/conversations\";\n\n\nimport \"./assets/Conversation.css\";\nimport \"./assets/ConversationSection.css\";\n\n\nimport Conversation from \"./Conversation\";\nimport { ConversationsList } from \"./ConversationsList\";\nimport { HeaderItem } from \"./HeaderItem\";\nimport axios from 'axios';\n\n\n\nlet DEV_URL = '';\nif (process.env.NODE_ENV === 'development') {\n  DEV_URL = 'http://localhost:3000';\n }\n\n\nconst { Content, Sider, Header } = Layout;\nconst { Text } = Typography;\n\n\n\nclass ConversationsApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const name =  localStorage.getItem(\"name\") || \"\";\n    \n\n    this.state = {\n      name,\n      loggedIn: true,\n      token: null,\n      conversationsReady: false,\n      conversations: [],\n      selectedConversationSid: null,\n      newMessage: \"\",\n      username: null\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.state.loggedIn) {\n      this.getToken();\n    }\n  };\n\n  \n\n  logIn = (name) => {\n    if (name !== \"\") {\n      localStorage.setItem(\"name\", name);\n      this.setState({ name, loggedIn: true }, this.getToken);\n    }\n  };\n\n  getUsername = async () => {\n    const username=axios.get(`${DEV_URL}/users`)\n            // .then((response) => this.setState({ token: (response.data.token) }))\n                      .then((response) => {return response.data})\n    return username;\n  }\n\n  getToken = async () => {\n      var usrname=await this.getUsername();\n       axios.get('https://sunglow-dotterel-5846.twil.io/chat-token?identity='+usrname)\n            // .then((response) => this.setState({ token: (response.data.token) }))\n          .then((response) => {this.setState({ token: response.data.token}, this.initConversations)})\n          // .then((response) => console.log(response.data.token))\n\n  };\n\n  initConversations = async () => {\n    window.conversationsClient = ConversationsClient;\n    this.conversationsClient = await ConversationsClient.create(\n      this.state.token\n    );\n    \n\n    this.conversationsClient.on(\"connectionStateChanged\", (state) => {\n      if (state === \"connecting\")\n        this.setState({\n          status: \"default\"\n        });\n      if (state === \"connected\") {\n        this.setState({\n          status: \"success\"\n        });\n      }\n      if (state === \"disconnecting\")\n        this.setState({\n          conversationsReady: false,\n          status: \"default\"\n        });\n      if (state === \"disconnected\")\n        this.setState({\n          conversationsReady: false,\n          status: \"warning\"\n        });\n      if (state === \"denied\")\n        this.setState({\n          conversationsReady: false,\n          status: \"error\"\n        });\n    });\n    this.conversationsClient.on(\"conversationJoined\", (conversation) => {\n      this.setState({\n        conversations: [...this.state.conversations, conversation]\n      });\n    });\n    this.conversationsClient.on(\"conversationLeft\", (thisConversation) => {\n      this.setState({\n        conversations: [\n          ...this.state.conversations.filter((it) => it !== thisConversation)\n        ]\n      });\n    });\n  };\n\n  render() {\n    \n    const { conversations, selectedConversationSid, status } = this.state;\n    const selectedConversation = conversations.find(\n      (it) => it.sid === selectedConversationSid\n    );\n    console.log(selectedConversationSid)\n\n    let conversationContent;\n    if (selectedConversation) {\n      conversationContent = (\n        <Conversation\n          conversationProxy={selectedConversation}\n          myIdentity={this.state.name}\n        />\n      );\n    } else if (status !== \"success\") {\n      conversationContent = \"Loading your conversation!\";\n    } else {\n      conversationContent = \"\";\n    }\n\n    if (this.state.loggedIn) {\n      return (\n        <div className=\"conversations-window-wrapper\">\n          <Header\n              style={{ display: \"flex\", padding: 0, background: \"black\" }}\n            >\n              <div\n                style={{\n                  maxWidth: \"250px\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  \n                }}\n                \n              >\n                <HeaderItem style={{ float: \"left\" }}>\n                    <a href=\"/\">\n                      <button style={{ float: \"left\", background: \"transparent\", color: \"white\" }}>HOME</button>\n                    </a>\n                   \n                   </HeaderItem>\n                   <HeaderItem style={{ float: \"right\", marginLeft: \"auto\"}}>\n                  \n                </HeaderItem>\n              </div>\n          \n              <div\n                style={{\n                  maxWidth: \"250px\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  float: \"right\",\n                  marginLeft: \"50%\"\n                  \n                }}\n                \n              >\n                <HeaderItem >\n                  <a href=\"/dashboard\">\n                      <button style={{  background: \"transparent\", color: \"white\" }}>DASHBOARD</button>\n                    </a>\n                </HeaderItem>\n                <HeaderItem >\n                  <a href=\"/app\">\n                      <button style={{  background: \"transparent\", color: \"white\" }}>INBOX</button>\n                    </a>\n                </HeaderItem> \n                <HeaderItem >\n                  <a href=\"/logout\">\n                      <button style={{  background: \"transparent\", color: \"white\" }}>LOGOUT</button>\n                    </a>\n                </HeaderItem>\n                \n                \n                </div>\n                </Header>\n          <Layout className=\"conversations-window-container\">\n          \n            <Layout>\n              <Sider theme={\"light\"} width={250}>\n                <ConversationsList\n                  conversations={conversations}\n                  selectedConversationSid={selectedConversationSid}\n                  onConversationClick={(item) => {\n                    this.setState({ selectedConversationSid: item.sid });\n                  }}\n                />\n              </Sider>\n              <Content className=\"conversation-section\">\n              \n                <div id=\"SelectedConversation\">\n                <Header\n              style={{ display: \"flex\", padding: 0, background: \"#222222\" }}\n            >\n              <div\n                style={{\n                  maxWidth: \"250px\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  float: \"right\",\n                  marginLeft: \"auto\"\n                  \n                }}\n                \n              >\n              <Text strong style={{ color: \"white\", float: \"right\"}}>\n                    {selectedConversation &&\n                      (selectedConversation.friendlyName ||\n                        selectedConversation.sid)}\n                  </Text>\n                  </div>\n                  <HeaderItem >\n                  \n                  <a href=\"/report\">\n                      <button style={{  background: \"transparent\", color: \"white\" }}>REPORT</button>\n                    </a>\n                    \n                </HeaderItem>\n                <HeaderItem >\n                  <a href=\"/review\">\n                      <button style={{  background: \"transparent\", color: \"white\" }}>REVIEW</button>\n                    </a>\n                </HeaderItem>\n                  </Header>\n                  {conversationContent}\n                  \n                  </div>\n                \n              </Content>\n            </Layout>\n          </Layout>\n        </div>\n      );\n    }\n\n    \n  }\n}\n\nexport default ConversationsApp;\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport ConversationsApp from './ConversationsApp';\nimport './assets/App.css';\nimport 'antd/dist/antd.css';\n\n\n\nclass App extends Component {\n  constructor(props) {\n   super(props);\n   this.state = {\n     \n   };\n  }\n  // async compon() {\n  //  // Call self-hosted API to get users response\n   \n  //  axios.get(`${DEV_URL}/users`)\n  //           // .then((response) => this.setState({ token: (response.data.token) }))\n  //         .then((response) => {this.setState({ user: response.data})})\n  //         // .then((response) => console.log(response.data))\n   \n  // // console.log(this.state.user)\n  //   // return this.state.user\n  // }\n  render() {\n    \n    return <ConversationsApp />\n  }\n }\n export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}